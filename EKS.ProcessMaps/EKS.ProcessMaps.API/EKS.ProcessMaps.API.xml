<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EKS.ProcessMaps.API</name>
    </assembly>
    <members>
        <member name="T:AutoMapping">
            <summary>
            AutoMapping Class for map
            </summary>
        </member>
        <member name="M:AutoMapping.#ctor">
            <summary>
            Constructor - AutoMapping to map all entity and model
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityBlocksController.CreateActivities(EKS.ProcessMaps.Models.ActivityBlocksModel)">
             <summary>
              Create a activity blocks
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "swimLaneId": 509,
                         "activityTypeId": 1,
                         "reviewGate": "Test RG",
                         "name": "Test-AB",
                         "description": "Test purpose",
                         "label": "Label-AB",
                         "sequenceNumber": 1,
                         "color": "Blue",
                         "backgroundColor": "Yellow",
                         "borderColor": "Black",
                         "borderStyle": "Line",
                         "borderWidth": 5,
                         "location": "None",
                         "processMapId": 232,
                         "phaseId": null,
                    }
            
             Sample Response:
            
                    {
                        "id": 491,
                        "swimLaneId": 509,
                        "activityTypeId": 1,
                        "reviewGate": "Test RG",
                        "name": "Test-AB",
                        "description": "Test purpose",
                        "label": "Label-AB",
                        "sequenceNumber": 1,
                        "color": "Blue",
                        "backgroundColor": "Yellow",
                        "borderColor": "Black",
                        "borderStyle": "Line",
                        "borderWidth": 5,
                        "version": 1,
                        "effectiveFrom": "2021-02-03T00:00:00",
                        "effectiveTo": null,
                        "createdDateTime": "2021-02-03T18:17:24.3289541",
                        "createdUser": "pwesw1",
                        "lastUpdateDateTime": "2021-02-03T18:17:24.3289541",
                        "lastUpdateUser": "pwesw1",
                        "location": "None",
                        "processMapId": 232,
                        "phaseId": 1,
                        "activityMeta": [],
                        "activityConnections": [],
                        "activityDocuments": []
                    }
             </remarks>
             <param name="activitiesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityBlocksController.UpdateActivities(EKS.ProcessMaps.Models.ActivityBlocksModel)">
             <summary>
             Updates a specified activity block.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 491,
                         "swimLaneId": 509,
                         "activityTypeId": 1,
                         "reviewGate": "Test RG-1",
                         "name": "Test-AB",
                         "description": "Test purpose",
                         "label": "Label-AB",
                         "sequenceNumber": 1,
                         "color": "Blue",
                         "backgroundColor": "Yellow",
                         "borderColor": "Black",
                         "borderStyle": "Line",
                         "borderWidth": 5,
                         "location": "None",
                         "processMapId": 232,
                         "phaseId": null
                    }
            
             Sample Response:
            
                    {
                        "id": 491,
                        "swimLaneId": 509,
                        "activityTypeId": 1,
                        "reviewGate": "Test RG-1",
                        "name": "Test-AB",
                        "description": "Test purpose",
                        "label": "Label-AB",
                        "sequenceNumber": 1,
                        "color": "Blue",
                        "backgroundColor": "Yellow",
                        "borderColor": "Black",
                        "borderStyle": "Line",
                        "borderWidth": 5,
                        "version": 1,
                        "effectiveFrom": "2021-02-03T00:00:00",
                        "effectiveTo": null,
                        "createdDateTime": "2021-02-03T18:17:24.3289541",
                        "createdUser": "pwesw1",
                        "lastUpdateDateTime": "2021-02-03T18:17:24.3289541",
                        "lastUpdateUser": "pwesw1",
                        "location": "None",
                        "processMapId": 232,
                        "phaseId": 1,
                        "activityMeta": [],
                        "activityConnections": [],
                        "activityDocuments": []
                    }
             </remarks>
             <param name="activitiesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityBlocksController.UpdateActivitiesSequence(System.Collections.Generic.IEnumerable{EKS.ProcessMaps.Models.SequenceUpdateModel})">
             <summary>
             Updates sequence number of activity blocks.
             </summary>
             <remarks>
             Sample Request:
            
                 [
                    {
                         "id": 438,
                         "sequenceNumber": 2,
                    },
                    {
                         "id": 439,
                         "sequenceNumber": 3,
                    }
                 ]
            
             Sample Response:
            
                 [
                    {
                         "id": 438,
                         "sequenceNumber": 2,
                    },
                    {
                         "id": 439,
                         "sequenceNumber": 3,
                    }
                 ]
             </remarks>
             <param name="activitiesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityBlocksController.DeleteActivities(System.Int32)">
             <summary>
             Deletes a activity block.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 490
                    }
            
             Sample Response:
            
                    {
                        true
                    }
             </remarks>
             <param name="id"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityBlocksController.GetActivitiesByProcessMapAsync(System.Int64)">
             <summary>
             Get all activity blocks of a specified process map.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "Id": 231
                    }
            
             Sample Response:
            
                    {
                         "id": 438,
                         "swimLaneId": 504,
                         "activityTypeId": null,
                         "reviewGate": null,
                         "name": "Test-ActivityBlocks-0",
                         "description": null,
                         "label": null,
                         "sequenceNumber": null,
                         "color": null,
                         "backgroundColor": null,
                         "borderColor": null,
                         "borderStyle": null,
                         "borderWidth": null,
                         "location": null,
                         "processMapId": 231,
                         "phaseId": 1,
                         "activityMeta": [
                         {
                             "id": 98,
                             "activityBlockId": 438,
                             "key": "Test-Key-ActivityMeta-0",
                             "value": "Test-Value-ActivityMeta-0"
                         }
                         ],
                         "activityConnections": [
                         {
                             "id": 241,
                             "activityBlockId": 438,
                             "previousActivityBlockId": null,
                             "label": "Test-Label-0"
                          }
                          ],
                          "activityDocuments": [
                          {
                             "id": 173,
                             "contentId": "Test-ActivityDocuments-0",
                             "activityBlockId": 438,
                             "subProcessMapId": null,
                             "activityPageId": null
                           }
                           ]
                           },
                  {
                     "id": 439,
                     "swimLaneId": 504,
                     "activityTypeId": null,
                     "processMapId": 231,
                     "activityMeta": [
                     {
                         "id": 99,
                         "activityBlockId": 439
                     }
                     ],
                     "activityConnections": [
                     {
                         "id": 242,
                         "activityBlockId": 439,
                         "previousActivityBlockId": 440
                     },
                     {
                         "id": 243,
                         "activityBlockId": 439,
                         "previousActivityBlockId": 438
                     }
                     ],
                     "activityDocuments": [
                     {
                         "id": 174,
                         "contentId": "Test-ActivityDocuments-0",
                         "activityBlockId": 439
                      }
                      ]
                 }
             </remarks>
             <param name="processMapId"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityBlockTypesController.GetAllActivityBlockTypes">
             <summary>
             Get all the activity block types
             </summary>
             <remarks>
             Sample Response:
            
            
                       [
                         {
                             "id": 1,
                             "name": "Square"
                         },
                         {
                             "id": 2,
                             "name": "Diamond"
                         }
                       ]
             </remarks>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityConnectionsController.#ctor(EKS.ProcessMaps.Business.Interfaces.IActivityConnectionsAppService,EKS.Common.Logging.ILogManager)">
            <summary>
            Constructor of activity connections.
            </summary>
            <param name="activityConnectionsAppService"></param>
            <param name="logManager"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityConnectionsController.CreateActivityConnections(EKS.ProcessMaps.Models.ActivityConnectionsModel)">
             <summary>
             Create a new activity connections on a specified activity.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "activityBlockId": 171,
                         "previousActivityBlockId": 170,
                    }
            
             Sample Response:
            
                    {
                        "id": 519,
                        "activityBlockId": 171,
                        "previousActivityBlockId": 170,
                    }.
             </remarks>
             <param name="activityConnectionsModel"></param>
             <returns>ActivityConnectionsModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityConnectionsController.UpdateActivityConnections(EKS.ProcessMaps.Models.ActivityConnectionsModel)">
             <summary>
             Update a specified activity connections
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 519,
                         "activityBlockId": 171,
                         "previousActivityBlockId": 170,
                    }
            
             Sample Response:
            
                    {
                        "id": 519,
                        "activityBlockId": 171,
                        "previousActivityBlockId": 170,
                    }.
             </remarks>
             <param name="activityConnectionsModel"></param>
             <returns>ActivityConnectionsModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityConnectionsController.DeleteActivityConnections(System.Int32)">
             <summary>
             Deletes a specified activity connections.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 519
                    }
            
             Sample Response:
            
                    {
                         true
                    }.
             </remarks>
             <param name="id"></param>
             <returns>bool</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ActivityPagesController.GetAllActivityPages">
             <summary>
             Get all the activity pages
             </summary>
             <remarks>
             Sample Response:
            
                    [
                        {
                           "id": 1,
                           contentId": "",
                           "title": "TestAP010321_1",
                           "disciplineId": 2,
                           "subDisciplineId": 13,
                           "subSubDisciplineId": 30,
                           "subSubSubDisciplineId": null,
                           "disciplineCodeId": 3,
                           "assetTypeId": 6,
                           "assetStatusId": 1,
                           "contentOwnerId": "2",
                           "classifierId": 4,
                           "confidentialityId": 4,
                           "revisionTypeId": null,
                           "programControlled": true,
                           "outsourceable": false,
                           "version": 1,
                           "effectiveFrom": "2021-03-01T00:00:00",
                           "effectiveTo": null,
                           "createdDateTime": "2021-03-01T18:59:54.6979563",
                           "createdUser": "sm@pwesw2.onmicrosoft.com",
                           "lastUpdateDateTime": "2021-03-01T18:59:55.7833333",
                           "lastUpdateUser": "pwesw1",
                           "usjurisdictionId": null,
                           "usclassificationId": null,
                           "classificationRequestNumber": null,
                           "classificationDate": null,
                           "tpmDate": null,
                           "keywords": "TestKey",
                           "author": null,
                           "confidentiality": true,
                           "purpose": "tset",
                           "processInstId": null,
                           "customId": null
                        }
                    ]
             </remarks>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.EmailNotificationController.#ctor(EKS.Common.Notification.IEmailNotification,EKS.Common.Logging.ILogManager,Microsoft.Extensions.Configuration.IConfiguration)">
            <param name="logManager">ILogManager</param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.KPacksMapController.CreateKPacksMap(EKS.ProcessMaps.Models.KPackMapModel)">
             <summary>
              Create a kpacks map
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "title": "Kpack_05_19_21",
                         "disciplineCode": "FC",
                         "subSubDisciplineName": "Fan and Compressor",
                         "contentTypeName": "Knowledge Pack",
                         "parentContentAssetId": "AA-F-012995",
                         "contentAssetId": "FC-K-012271",
                         "parentContentTypeId": 13,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
            
             Sample Response:
            
                    {
                         "kPacksMapId": 493,
                         "title": "Kpack_05_19_21",
                         "disciplineCode": "FC",
                         "subSubDisciplineName": "Fan and Compressor",
                         "contentTypeName": "Knowledge Pack",
                         "parentContentAssetId": "AA-F-012995",
                         "contentAssetId": "FC-K-012271",
                         "parentContentTypeId": 13,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
             </remarks>
             <param name="kPackModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.KPacksMapController.AddKPacksMaps(System.Collections.Generic.IEnumerable{EKS.ProcessMaps.Models.KPackMapModel})">
             <summary>
              Create more than one kpacks map
             </summary>
             <remarks>
             Sample Request:
            
                 [
                    {
                         "title": "Kpack_05_19_21",
                         "disciplineCode": "FC",
                         "subSubDisciplineName": "Fan and Compressor",
                         "contentTypeName": "Knowledge Pack",
                         "parentContentAssetId": "AA-F-012995",
                         "contentAssetId": "FC-K-012271",
                         "parentContentTypeId": 13,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    },
                    {
                         "title": "Kpack_05_19_21",
                         "disciplineCode": "FC",
                         "subSubDisciplineName": "Fan and Compressor",
                         "contentTypeName": "Knowledge Pack",
                         "parentContentAssetId": "AA-F-012995",
                         "contentAssetId": "FC-K-012271",
                         "parentContentTypeId": 13,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
                  ]
            
             Sample Response:
            
                  [
                    {
                         "kPacksMapId": 494,
                         "title": "Kpack_05_19_21",
                         "disciplineCode": "FC",
                         "subSubDisciplineName": "Fan and Compressor",
                         "contentTypeName": "Knowledge Pack",
                         "parentContentAssetId": "AA-F-012995",
                         "contentAssetId": "FC-K-012271",
                         "parentContentTypeId": 13,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    },
                    {
                         "kPacksMapId": 495,
                         "title": "Kpack_05_19_21",
                         "disciplineCode": "FC",
                         "subSubDisciplineName": "Fan and Compressor",
                         "contentTypeName": "Knowledge Pack",
                         "parentContentAssetId": "AA-F-012995",
                         "contentAssetId": "FC-K-012271",
                         "parentContentTypeId": 13,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
                  ]
             </remarks>
             <param name="kPackModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.KPacksMapController.GetKPacksMapByParentContentAssetId(System.String,System.Nullable{System.Int32},System.String)">
             <summary>
             Get kpackmaps by parent content asset id
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "parentContentAssetId": "AA-F-012995",
                         "version": 1
                    }
            
             Sample Response:
            
                    {
                         "title": "Kpack_05_19_21",
                         "disciplineCode": "FC",
                         "subSubDisciplineName": "Fan and Compressor",
                         "contentTypeName": "Knowledge Pack",
                         "kPacksMapId": 25,
                         "parentContentAssetId": "AA-F-012995","contentAssetId": "FC-K-012271",
                         "parentContentTypeId": 13,
                 }
             </remarks>
             <param name="parentContentAssetId"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.KPacksMapController.Deletekpackmap(System.Int32)">
             <summary>
             Deletes a specified kpack map.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 519
                    }
            
             Sample Response:
            
                    {
                         true
                    }.
             </remarks>
             <param name="id"></param>
             <returns>bool</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.MapMigrationController.#ctor(EKS.Common.Logging.ILogManager,EKS.ProcessMaps.Business.Interfaces.IMigrateMapsAppService)">
            <summary>
            MigrateMapsController.
            </summary>
            <param name="logManager"></param>
            <param name="migrateMapsAppService"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.MapMigrationController.MigrateMaps(EKS.ProcessMaps.Models.ContentAssetTypeModel)">
            <summary>
            
            </summary>
            <param name="contentAssetTypeModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PhasesController.#ctor(EKS.ProcessMaps.Business.Interfaces.IPhasesAppService,EKS.Common.Logging.ILogManager)">
            <summary>
            Constructor of phases
            </summary>
            <param name="phasesAppService"></param>
            <param name="logManager"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PhasesController.GetPhasesById(System.Int64)">
             <summary>
             Get phases by id.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 1
                    }
            
             Sample Response:
            
                    {
                         "id": 1,
                         "name": "Test Phase3",
                         "caption": null,
                         "sequenceNumber": 1,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "processMapId": 405,
                         "size": "500 0",
                         "location": null
                 }
             </remarks>
             <param name="processMapId"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PhasesController.GetPhasesByProcessMapId(System.Nullable{System.Int32})">
             <summary>
             Get phases by processmap id.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "processMapId": 405
                    }
            
             Sample Response:
            
                    {
                         "id": 1,
                         "name": "Test Phase3",
                         "caption": null,
                         "sequenceNumber": 1,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "processMapId": 405,
                         "size": "500 0",
                         "location": null
                 }
             </remarks>
             <param name="processMapId"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PhasesController.CreatePhases(EKS.ProcessMaps.Models.PhasesModel)">
             <summary>
              Create phases.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "name": "Test Phase3",
                         "caption": null,
                         "sequenceNumber": 1,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "processMapId": 405,
                         "size": "500 0",
                         "location": null
                    }
            
             Sample Response:
            
                    {
                         "id": 1,
                         "name": "Test Phase3",
                         "caption": null,
                         "sequenceNumber": 1,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "processMapId": 405,
                         "size": "500 0",
                         "location": null
                    }
             </remarks>
             <param name="phasesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PhasesController.Updatephases(EKS.ProcessMaps.Models.PhasesModel)">
             <summary>
             Updates a specified phases.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 1,
                         "name": "Test Phase3",
                         "caption": null,
                         "sequenceNumber": 1,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "processMapId": 405,
                         "size": "400 0",
                         "location": null
                    }
            
             Sample Response:
            
                    {
                         "id": 1,
                         "name": "Test Phase3",
                         "caption": null,
                         "sequenceNumber": 1,
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "processMapId": 405,
                         "size": "400 0",
                         "location": null
                    }
             </remarks>
             <param name="phasesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PhasesController.Deletephases(System.Int32)">
             <summary>
             Delete phases by id.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 1
                    }
            
             Sample Response:
            
                    {
                         true
                    }.
             </remarks>
             <param name="id"></param>
             <returns>bool</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PrivateAssetsController.#ctor(EKS.ProcessMaps.Business.Interfaces.IPrivateAssetsAppService,EKS.Common.Logging.ILogManager)">
            <summary>
            Constructor of private assets.
            </summary>
            <param name="privateAssetsAppService"></param>
            <param name="logManager"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PrivateAssetsController.GetAllPrivateAssets">
             <summary>
             Get all private assets
             </summary>
             <remarks>
             Sample Response:
            
                      [
                         {
                             "contentAssetId": 3,
                             "parentContentAssetId": 12,
                             "parentTaskId": null,
                             "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                             "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                         },
                         {
                             "contentAssetId": 10,
                             "parentContentAssetId": 12,
                             "parentTaskId": null,
                             "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                             "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                         }
                      ]
             </remarks>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PrivateAssetsController.GetPrivateAssetsByParentContentAssetId(System.Int32)">
             <summary>
             Get private asset by parent content asset id.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 12
                    }
            
             Sample Response:
            
                    {
                          "contentAssetId": 3,
                          "parentContentAssetId": 12,
                          "parentTaskId": null,
                          "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                          "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
             </remarks>
             <param name="parentContentAssetId"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PrivateAssetsController.CreatePrivateAssets(EKS.ProcessMaps.Models.PrivateAssetsModel)">
             <summary>
              Create phases.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                          "contentAssetId": 3,
                          "parentContentAssetId": 12,
                          "parentTaskId": null,
                          "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                          "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
            
             Sample Response:
            
                    {
                          "contentAssetId": 3,
                          "parentContentAssetId": 12,
                          "parentTaskId": null,
                          "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                          "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
             </remarks>
             <param name="privateAssetsModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PrivateAssetsController.UpdatePrivateAssets(EKS.ProcessMaps.Models.PrivateAssetsModel)">
             <summary>
             Updates a specified phases.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                          "contentAssetId": 3,
                          "parentContentAssetId": 12,
                          "parentTaskId": null,
                          "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                          "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
            
             Sample Response:
            
                    {
                          "contentAssetId": 3,
                          "parentContentAssetId": 12,
                          "parentTaskId": null,
                          "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                          "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com"
                    }
             </remarks>
             <param name="privateAssetsModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapMetaController.CreateProcessMapMeta(EKS.ProcessMaps.Models.ProcessMapMetaModel)">
             <summary>
             Create process map metadata 
             </summary>
             <remarks>
                       Sample Request:       
                            
                             {
                             "key": "Edited",
                             "value":"true", 
                             "processMapId": 545, 
                             "createdbyUserid":575
                             }
            
                        Sample Response:
                        
                             {	
                                 "id": 52,
                                 "processMapId": 545,
                                 "key": "Edited",
                                 "value": "true",
                                 "version": null,
                                 "createdon": null,
                                 "createdbyUserid": "575",
                                 "modifiedon": null,
                                 "modifiedbyUserid": null,
                                 "processMap": null
                              }
             </remarks>
             <param name="processMapMetaModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapMetaController.UpdateProcessMapMeta(EKS.ProcessMaps.Models.ProcessMapMetaModel)">
            <summary>
            Update process map metadata
            </summary>
            <remarks>
            
             Sample Request:
             
                {
                 "id" : 52,
                 "processMapId": 545,
                 "key": "TestMeta",
                 "value":"true",
                 "createdbyUserid":600
                }
              
            Sample Response:
            
                   {
                    "processMapId": 545,
                    "key": "TestMeta",
                    "value": "true",
                    "version": null,
                    "createdon": null,
                    "createdbyUserid": "600",
                    "modifiedon": null,
                    "modifiedbyUserid": null,
                    "processMap": null
                   }
            </remarks>
            <param name="processMapsMeta"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapMetaController.DeleteProcessMapMeta(System.Int32)">
            <summary>
            Delete process map metadata
            </summary>
            <remarks>
            
            Sample Response:
            
                   20
            </remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.#ctor(EKS.ProcessMaps.Business.Interfaces.IProcessMapsAppService,EKS.ProcessMaps.API.EKS.ProcessMaps.Business.Interfaces.PublishedContent.IKnowledgeAssetAppService,EKS.ProcessMaps.API.EKS.ProcessMaps.Business.Interfaces.PublishedContent.IKnowledgeAssetExportAppService,EKS.ProcessMaps.API.EKS.ProcessMaps.Business.Interfaces.PublishedContent.IKnowledgeAssetCloneAppService,EKS.Common.Logging.ILogManager)">
            <summary>
            ProcessMapsController
            </summary>
            <param name="processMapsAppService"></param>
            <param name="logManager"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.GetAllProcessMaps">
             <summary>
             Get all process maps
             </summary>
             <remarks>
             Sample Response:
            
                      {
                        "id": 89,
                        "contentId": "M-0009",
                        "title": "GSE Expanded Services",
                        "disciplineId": null,
                        "subDisciplineId": null,
                        "subSubDisciplineId": null,
                        "subSubSubDisciplineId": null,
                        "disciplineCodeId": null,
                        "phaseId": 1,
                        "swimLanes":[
                                                 {"id": 245, "name": "Design RDE", "processMapId": 89, "version": null,…},
                                                 {"id": 241, "name": "Project", "processMapId": 89, "version": 1,…},
                                                 {"id": 242, "name": "Milestone", "processMapId": 89, "version": 1,…}
                                     ],
                         "processMapMetaData":[
                                             {"id": 90, "processMapId": 89, "key": "Test-Key", "value": "Test-Value",…}
                       },
                       {
                         "id": 232,
                         "contentId": "M-0001",
                         "title": "Test-01",
                         "disciplineId": null,
                         "subDisciplineId": null,
                         "subSubDisciplineId": null,
                         "subSubSubDisciplineId": null,
                         "disciplineCodeId": null,
                         "swimLanes":[
                                                 {"id": 506, "name": "Test-Swimlane-1", "processMapId": 232, "version": 1,…},
                                                 {"id": 507, "name": "Test-Swimlane-2", "processMapId": 232, "version": 1,…}
                                     ],
                         "processMapMetaData":[
                                     {"id": 565, "processMapId": 232, "key": "Test-PMM", "value": "Test-PMM-Value",…}
                             ],
                             "phases": []
                             "contentPhases": [
                         {
                             "id": 217,
                             "contentId": 89,
                             "typeId": 4,
                             "phaseId": 3
                         },
                         {
                             "id": 218,
                             "contentId": 89,
                             "typeId": 4,
                             "phaseId": 5
                         }
                         ],
                         "contentExportCompliances": [
                         {
                             "id": 213,
                             "contentId": 89,
                             "typeId": 4,
                             "exportComplianceId": 1
                         },
                         {
                             "id": 214,
                             "contentId": 89,
                             "typeId": 4,
                             "exportComplianceId": 2
                         }
                         ],
                         "contentTags": [
                         {
                             "id": 90,
                             "contentId": 89,
                             "typeId": 4,
                             "tagId": 72
                         },
                         {
                             "id": 91,
                             "contentId": 89,
                             "typeId": 4,
                             "tagId": 838
                         }
                         ]
                         }
             </remarks>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.GetProcessMapsById(System.Int64,System.String,System.String,System.String,System.Int32,System.String)">
             <summary>
             Get process maps by process map id.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                        "id": 459
                    }
            
             Sample Response:
            
                    {
                        "id": 459,
                        "contentId": "M-0001",
                        "title": "Test-01",
                        "disciplineId": null,
                        "subDisciplineId": null,
                        "subSubDisciplineId": null,
                        "subSubSubDisciplineId": null,
                        "disciplineCodeId": null,
                        "assetTypeId": null,
                        "assetStatusId": null,
                        "approvalRequirementId": null,
                        "classifierId": null,
                        "confidentialityId": null,
                        "revisionTypeId": null,
                        "programControlled": true,
                        "outsourceable": true,
                        "version": 1,
                        "effectiveFrom": "2021-02-03T15:38:00.969Z",
                        "effectiveTo": "2021-02-03T15:38:00.969Z",
                        "createdDateTime": "2021-02-03T15:38:00.969Z",
                        "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                        "lastUpdateDateTime": "2021-02-03T15:38:00.969Z",
                        "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                        "usjurisdictionId": null,
                        "usclassificationId": null,
                        "classificationRequestNumber": null,
                        "classificationDate": "2021-02-03T15:38:00.969Z",
                        "Tpmdate": null,
                        "swimLanes": [
                        {
                             "id": 506,
                             "name": "Test-Swimlane",
                             "description": null,
                             "label": null,
                             "processMapId": 459,
                             "sequenceNumber": null,
                             "color": null,
                             "backgroundColor": null,
                             "borderColor": null,
                             "borderStyle": null,
                             "borderWidth": null,
                             "version": 1,
                             "effectiveFrom": "2021-02-03T00:00:00",
                             "effectiveTo": null,
                             "createdDateTime": "2021-02-03T15:53:32.4654106",
                             "createdUser": "pwesw1",
                             "lastUpdateDateTime": "2021-02-03T15:53:32.4654106",
                             "lastUpdateUser": "pwesw1",
                             "location": null
                        }
                        ],
                        "processMapMeta": [
                        {
                             "id": 565,
                             "processMapId": 459,
                             "key": "Test-PMM",
                             "value": "Test-PMM-Value",
                             "version": null,
                             "createdon": null,
                             "createdbyUserid": null,
                             "modifiedon": null,
                             "modifiedbyUserid": null
                        }
                        ],
                        "activityBlocks": [],
                        "activityDocuments": [],
                        "phases": [],
                        "contentPhases": [
                         {
                             "id": 217,
                             "contentId": 459,
                             "typeId": 4,
                             "phaseId": 3
                         },
                         {
                             "id": 218,
                             "contentId": 459,
                             "typeId": 4,
                             "phaseId": 5
                         }
                         ],
                         "contentExportCompliances": [
                         {
                             "id": 213,
                             "contentId": 459,
                             "typeId": 4,
                             "exportComplianceId": 1
                         },
                         {
                             "id": 214,
                             "contentId": 459,
                             "typeId": 4,
                             "exportComplianceId": 2
                         }
                         ],
                         "contentTags": [
                         {
                             "id": 90,
                             "contentId": 459,
                             "typeId": 4,
                             "tagId": 72
                         },
                         {
                             "id": 91,
                             "contentId": 459,
                             "typeId": 4,
                             "tagId": 838
                         }
                         ]
                    }
             </remarks>
             <param name="id"></param>
             <param name="contentType"></param>
             <param name="status"></param>
             <param name="contentId"></param>
             <param name="version"></param>
             <param name="currentUserEmail"></param>
             <returns>ProcessMapModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.GetProcessMapsFlowViewById(System.Int64,System.String,System.String,System.Int32)">
            <summary>
            GetProcessMapsFlowViewById
            </summary>
            <param name="id"></param>
            <param name="status"></param>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.CreateProcessMaps(EKS.ProcessMaps.Models.ProcessMapModel)">
             <summary>
             Create process maps.
             </summary>
             <remarks>
             Sample Request:
            
                     {
                         "id": 0,
                         "title": "valid title"
                     }
            
             Sample Response:
            
                    {
                         "id": 1179,
                         "contentId": "AA-F-012746",
                         "title": "valid title 2",
                         "disciplineId": null,
                         "disciplineCodeId": null,
                         "assetTypeId": 4,
                         "assetStatusId": 1,
                         "approvalRequirementId": null,
                         "classifierId": null,
                         "confidentialityId": null,
                         "revisionTypeId": null,
                         "programControlled": null,
                         "outsourceable": null,
                         "version": 1,
                         "effectiveFrom": "2021-06-08T00:00:00",
                         "effectiveTo": null,
                         "createdDateTime": "2021-06-08T20:51:10.1347306+00:00",
                         "createdUser": "pwesw1",
                         "lastUpdateDateTime": "2021-06-08T20:51:10.4304123+00:00",
                         "lastUpdateUser": "pwesw1",
                         "usjurisdictionId": null,
                         "usclassificationId": null,
                         "classificationRequestNumber": null,
                         "classificationDate": null,
                         "tpmdate": null,
                         "exportAuthorityId": null,
                         "controllingProgramId": null,
                         "contentOwnerId": null,
                         "keywords": null,
                         "author": null,
                         "confidentiality": null,
                         "purpose": null,
                         "processInstId": null,
                         "customId": null,
                         "disciplineCode": null,
                         "privateInd": false,
                         "sourceFileUrl": null,
                         "exportPdfurl": null,
                         "swimLanes": [],
                         "contentPhase": null,
                         "contentExportCompliances": null,
                         "contentTag": null
                    }
             </remarks>
             <param name="processMapModel"></param>
             <returns>ProcessMapModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.CreateFromExistingProcessMaps(EKS.ProcessMaps.Models.ProcessMapExistingModel)">
             <summary>
             Create new process maps from existing process maps.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                        "id": 1031,
                        "contentId": "MAP-000009",
                        "title": "ORM9",
                        "disciplineId": 1,
                        "subDisciplineId": 1,
                        "subSubDisciplineId": 2,
                        "subSubSubDisciplineId": null,
                        "disciplineCodeId": null,
                        "assetTypeId": 4,
                        "assetStatusId": 1,
                        "approvalRequirementId": null,
                        "classifierId": null,
                        "confidentialityId": null,
                        "revisionTypeId": null,
                        "programControlled": null,
                        "outsourceable": false,
                        "version": 1,
                        "effectiveFrom": "2021-01-18T00:00:00",
                        "effectiveTo": null,
                        "createdDateTime": "2021-01-18T09:21:52.5725952",
                        "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                        "lastUpdateDateTime": "2021-01-18T09:21:52.5725952",
                        "lastUpdateUser": "",
                        "usjurisdictionId": null,
                        "usclassificationId": null,
                        "classificationRequestNumber": null,
                        "classificationDate": null,
                        "tpmdate": null,
                        "exportAuthorityId": null,
                        "controllingProgramId": null,
                        "contentOwnerId": pwesw1@pwesw2.onmicrosoft.com,
                        "keywords": null,
                        "author": null,
                        "confidentiality": null,
                        "purpose": null,
                        "processInstId": null,
                        "customId": null
                    }
            
             Sample Response:
            
                    {
                        "id": 1031,
                        "contentId": "MAP-000009",
                        "title": "ORM9",
                        "disciplineId": 1,
                        "subDisciplineId": 1,
                        "subSubDisciplineId": 2,
                        "subSubSubDisciplineId": null,
                        "disciplineCodeId": null,
                        "assetTypeId": 4,
                        "assetStatusId": 1,
                        "approvalRequirementId": null,
                        "classifierId": null,
                        "confidentialityId": null,
                        "revisionTypeId": null,
                        "programControlled": null,
                        "outsourceable": false,
                        "version": 1,
                        "effectiveFrom": "2021-01-18T00:00:00",
                        "effectiveTo": null,
                        "createdDateTime": "2021-01-18T09:21:52.5725952",
                        "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                        "lastUpdateDateTime": "2021-01-18T09:21:52.5725952",
                        "lastUpdateUser": "",
                        "usjurisdictionId": null,
                        "usclassificationId": null,
                        "classificationRequestNumber": null,
                        "classificationDate": null,
                        "tpmdate": null,
                        "exportAuthorityId": null,
                        "controllingProgramId": null,
                        "contentOwnerId": pwesw1@pwesw2.onmicrosoft.com,
                        "keywords": null,
                        "author": null,
                        "confidentiality": null,
                        "purpose": null,
                        "processInstId": null,
                        "customId": null
                    }
             </remarks>
             <param name="processMapExistingModel"></param>
             <returns>processMapExistingModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.SaveAsStepFlow(EKS.ProcessMaps.Models.ProcessMapsSaveAsModel)">
            <summary>
            SaveAsStepFlow
            </summary>
            <param name="saveAsModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.SaveAsStep(EKS.ProcessMaps.Models.ProcessMapsSaveAsModel)">
            <summary>
            SaveAsProcessMap
            </summary>
            <param name="stepFlow"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.ReviseStepFlow(EKS.ProcessMaps.Models.ProcessMapsReviseModel)">
            <summary>
            ReviseStepFlow
            </summary>
            <param name="reviseModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.ReviseStep(EKS.ProcessMaps.Models.ProcessMapsReviseModel)">
            <summary>
            ReviseProcessMap
            </summary>
            <param name="reviseModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.UpdateProcessMaps(EKS.ProcessMaps.Models.ProcessMapModel)">
             <summary>
             Updates a specified process map
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 231,
                         "contentId": "M-0231",
                         "title": "GSE Expanded Services",
                         "disciplineId": null,
                         "subDisciplineId": null,
                         "subSubDisciplineId": null,
                         "subSubSubDisciplineId": null,
                         "disciplineCodeId": null,
                         "assetTypeId": 4,
                         "assetStatusId": 2,
                         "approvalRequirementId": null,
                         "classifierId": null,
                         "phaseId": null,
                         "confidentialityId": null,
                         "controllingProgramId": null,
                         "exportComplianceTouchPointId": null,
                         "revisionTypeId": null,
                         "contentOwnerId": null,
                         "programControlled": null,
                         "outsourceable": null,
                         "tagId": null
                    }
            
             Sample Response:
            
                    {
                        "id": 231,
                        "contentId": "M-0231",
                        "title": "GSE Expanded Services",
                        "disciplineId": null,
                        "subDisciplineId": null,
                        "subSubDisciplineId": null,
                        "subSubSubDisciplineId": null,
                        "disciplineCodeId": null,
                        "assetTypeId": 4,
                        "assetStatusId": 2,
                        "approvalRequirementId": null,
                        "classifierId": null,
                        "phaseId": null,
                        "confidentialityId": null,
                        "controllingProgramId": null,
                        "exportComplianceTouchPointId": null,
                        "revisionTypeId": null,
                        "contentOwnerId": null,
                        "programControlled": null,
                        "outsourceable": null,
                        "tagId": null,
                        "version": 1,
                        "effectiveFrom": "2021-01-19T00:00:00",
                        "effectiveTo": null,
                        "createdDateTime": "2021-01-19T10:25:35.1683054",
                        "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                        "lastUpdateDateTime": "2021-01-19T10:25:35.1683054",
                        "lastUpdateUser": "",
                        "firstPublicationDateTime": null,
                        "usjurisdictionId": null,
                        "usclassificationId": null,
                        "classificationRequestNumber": null,
                        "classificationDate": null,
                        "securityAttributesId": null,
                        "exportComplianceTouchPointComments": "",
                        "assetHandleId": null,
                        "sourceAssetHandleId": null,
                        "scopeId": null,
                        "assetClassId": null,
                        "swimLanes": [],
                        "processMapMeta": [],
                        "activityBlocks": [],
                        "activityDocuments": []
                    }
             </remarks>
             <param name="id"></param>
             <param name="map"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.UpdatePropertiesInProcessMap(EKS.ProcessMaps.Models.ProcessMapModel)">
             <summary>
             Update properties in process map
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 9,
                         "title": "Dummy M-9",
                         "approvalRequirementId":3,
                         "DisciplineCode":"ABS",
                         "exportComplienceTouchPoint":[2,3],
                         "phaseId": [2,4],
                         "confidentialityId":3,
                         "ProgramControlled": true,
                         "DocumentType":"1",
                         "ClassifierId":2,
                         "CreatorClockId":"sm@pwesw2.onmicrosoft.com",
                         "ContentStatus":"Draft",
                         "ContentTypeId":4,
                         "CreatedOn":"2020-12-24T07:20:00.823Z"
                    }
            
             Sample Response:
            
                    {
                         "id": 9,
                         "title": "Dummy M-9",
                         "approvalRequirementId":3,
                         "DisciplineCode":"ABS",
                         "exportComplienceTouchPoint":[2,3],
                         "phaseId": [2,4],
                         "confidentialityId":3,
                         "ProgramControlled": true,
                         "DocumentType":"1",
                         "ClassifierId":2,
                         "CreatorClockId":"sm@pwesw2.onmicrosoft.com",
                         "ContentStatus":"Draft",
                         "ContentTypeId":4,
                         "CreatedOn":"2020-12-24T07:20:00.823Z"
                    }
             </remarks>
             <param name="processMapModel"></param>       
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.UpdateProcessMapStatus(EKS.ProcessMaps.Models.ProcessMapModel)">
             <summary>
             Updates asset status of process maps
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 962,
                         "assetStatusId": 2
                    }
            
             Sample Response:
            
                    {
                        "id": 962,
                        "assetStatusId": 2,
                    }
             </remarks>
             <param name="id"></param>
             <param name="assetStatusId"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.UpdateProcessMapsPurpose(EKS.ProcessMaps.Models.ProcessMapsPurposeModel)">
            <summary>
            Update ProcessMaps Purpose Only
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.DeleteProcessMaps(System.Int32)">
             <summary>
             Delete process map
             </summary>
             <remarks>
            Sample Response
            
                      192
             </remarks>
             <param name="id"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.GetAllProcessMapsByUserId(System.String)">
             <summary>
             Get all process maps on basis of user id.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                        "Userid": "pwesw1@pwesw2.onmicrosoft.com"
                    }
            
             Sample Response:
            
                    {
                        "id": 89,
                        "contentId": "M-0009",
                        "title": "GSE Expanded Services",
                        "disciplineId": null,
                        "subDisciplineId": null,
                        "subSubDisciplineId": null,
                        "subSubSubDisciplineId": null,
                        "disciplineCodeId": null,
                        "assetTypeId": 4,
                        "assetStatusId": 2,
                        "approvalRequirementId": null,
                        "classifierId": null,
                        "phaseId": null,
                        "confidentialityId": null,
                        "controllingProgramId": null,
                        "exportComplianceTouchPointId": null,
                        "revisionTypeId": null,
                        "contentOwnerId": null,
                        "programControlled": null,
                        "outsourceable": null,
                        "tagId": null,
                        "version": 1,
                        "effectiveFrom": "2021-01-19T00:00:00",
                        "effectiveTo": null,
                        "createdDateTime": "2021-01-19T10:25:35.1683054",
                        "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                        "lastUpdateDateTime": "2021-01-19T10:25:35.1683054",
                        "lastUpdateUser": "",
                        "firstPublicationDateTime": null,
                        "usjurisdictionId": null,
                        "usclassificationId": null,
                        "classificationRequestNumber": null,
                        "classificationDate": null,
                        "securityAttributesId": null,
                        "exportComplianceTouchPointComments": "",
                        "assetHandleId": null,
                        "sourceAssetHandleId": null,
                        "scopeId": null,
                        "assetClassId": null,
                        "swimLanes": [],
                        "processMapMeta": [],
                        "activityBlocks": [],
                        "activityDocuments": []
                    }
             </remarks>
             <param name="userId"></param>
             <returns>ProcessMapModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.ExportStepFlowToExcel(System.Int32,System.String)">
             <summary>
             ExportStepFlowToExcel 
             </summary>
             <remarks>
             Sample Request:
            
                    {
                        "id": "89",
                        "url": "https://eswnextgen.azurewebsites.net/view-document/"
                    }
            
             Sample Response:
            
                    {
                    }
             </remarks>
             <param name="id"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.ExportStepToExcel(System.Int32,System.String)">
            <summary>
            ExportProcessMapToExcel
            </summary>
            <param name="id"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.CreateStepAsync(EKS.ProcessMaps.Models.ActivityBlocksModel)">
            <summary>
            CreateStepAsync.
            </summary>
            <param name="activityBlock"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.GetStepFlowByIdOrContentId(System.Int32,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            GetStepFlowByIdOrContentId
            </summary>
            <param name="id"></param>
            <param name="contentId"></param>
            <param name="version"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.GetStepByIdOrContentIdAsync(System.Int32,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            GetStepByIdOrContentIdAsync
            </summary>
            <param name="id"></param>
            <param name="contentId"></param>
            <param name="version"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.DeleteStepAsync(System.Int64)">
            <summary>
            DeleteStep.
            </summary>
            <param name="id"></param>
            <param name="contentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.GetProcessMapIdByContentIdAndVersionAsync(System.String,System.Int32)">
            <summary>
            GetProcessMapIdByContentIdAndVersion.
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.ProcessMapsController.RemoveStepFromStepFlow(System.Int32,System.String)">
            <summary>
            RemoveStepFromStepFlow
            </summary>
            <param name="stepFlowId"></param>
            <param name="stepContentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PublicStepsController.CreatePublicSteps(EKS.ProcessMaps.Models.ProcessMapModel)">
             <summary>
             Create public steps.
             </summary>
             <remarks>
             Sample Request:
            
                     {
                         "title": "steps title",
                         "assetTypeId": 14 // It is 14 for public steps
                     }
            
             Sample Response:
            
                    {
                         "id": 1179,
                         "contentId": "AA-F-012746",
                         "title": "valid title 2",
                         "disciplineId": null,
                         "disciplineCodeId": null,
                         "assetTypeId": 4,
                         "assetStatusId": 1,
                         "approvalRequirementId": null,
                         "classifierId": null,
                         "confidentialityId": null,
                         "revisionTypeId": null,
                         "programControlled": null,
                         "outsourceable": null,
                         "version": 1,
                         "effectiveFrom": "2021-06-08T00:00:00",
                         "effectiveTo": null,
                         "createdDateTime": "2021-06-08T20:51:10.1347306+00:00",
                         "createdUser": "pwesw1",
                         "lastUpdateDateTime": "2021-06-08T20:51:10.4304123+00:00",
                         "lastUpdateUser": "pwesw1",
                         "usjurisdictionId": null,
                         "usclassificationId": null,
                         "classificationRequestNumber": null,
                         "classificationDate": null,
                         "tpmdate": null,
                         "exportAuthorityId": null,
                         "controllingProgramId": null,
                         "contentOwnerId": null,
                         "keywords": null,
                         "author": null,
                         "confidentiality": null,
                         "purpose": null,
                         "processInstId": null,
                         "customId": null,
                         "disciplineCode": null,
                         "privateInd": false,
                         "sourceFileUrl": null,
                         "exportPdfurl": null,
                         "swimLanes": [],
                         "contentPhase": null,
                         "contentExportCompliances": null,
                         "contentTag": null
                    }
             </remarks>
             <param name="processMapModel"></param>
             <returns>ProcessMapModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.PublicStepsController.UpdatePublicStepsPurpose(EKS.ProcessMaps.Models.PublicStepsPurposeModel)">
             <summary>
             Update purpose in public steps.
             </summary>
             <remarks>
             Sample Request:
            
                     {
                         "id": 3744,
                         "contentId": "P-1006414",
                         "purpose": "Steps purpose"
                     }
            
             Sample Response:
            
                    {
                         "id": 3744,
                         "contentId": "P-1006414",
                         "purpose": "Steps purpose"
                    }
             </remarks>
             <param name="PublicStepsPurposeModel"></param>
             <returns>PublicStepsPurposeModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.SwimLanesController.#ctor(EKS.ProcessMaps.Business.Interfaces.IActivityGroupsAppService,EKS.Common.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:EKS.ProcessMaps.API.Controllers.SwimLanesController"/> class.
            </summary>
            <param name="activityGroupsAppService"></param>
            <param name="logManager"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.SwimLanesController.CreateActivityGroups(EKS.ProcessMaps.Models.SwimLanesModel)">
             <summary>
             Create swimlanes.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "processMapId": 232,
                         "sequenceNumber": 1,
                         "color": "White",
                             "borderColor": "string",
                             "borderStyle": "string",
                             "borderWidth": 0,
                             "version": 0,
                             "effectiveFrom": "2021-06-08T19:48:58.829Z",
                             "effectiveTo": "2021-06-08T19:48:58.829Z",
                             "createdDateTime": "2021-06-08T19:48:58.829Z",
                             "createdUser": "string",
                             "lastUpdateDateTime": "2021-06-08T19:48:58.829Z",
                             "lastUpdateUser": "string",
                             "disciplineId": 5,
                             "protectedInd": true,
                             "requiredInd": true,
                             "size": "string"
                      }
             Sample Response:
            
                    {
                        "id": 509,
                        "processMapId": 232,
                        "sequenceNumber": 1,
                        "color": "White",
                        "backgroundColor": "Blue",
                        "borderColor": "Yellow",
                        "borderStyle": "Line",
                        "borderWidth": 3,
                        "version": 1,
                        "effectiveFrom": "2021-02-03T00:00:00",
                        "effectiveTo": null,
                        "createdDateTime": "2021-02-03T17:51:07.250676",
                        "createdUser": "pwesw1",
                        "lastUpdateDateTime": "2021-02-03T17:51:07.250676",
                        "lastUpdateUser": "pwesw1",
                        "disciplineId": 5,
                        "protectedInd": true,
                        "requiredInd": true,
                        "size": "string"
                    }
             </remarks>
             <param name="swimLanesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.SwimLanesController.UpdateActivityGroups(EKS.ProcessMaps.Models.SwimLanesModel)">
             <summary>
             Updates a specified swimlanes.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 509,
                         "name": "Test-Swimlane-1",
                         "description": "Test purpose",
                         "label": "SM",
                         "processMapId": 232,
                         "sequenceNumber": 1,
                         "color": "White",
                         "backgroundColor": "Blue",
                         "borderColor": "Yellow",
                         "borderStyle": "Line",
                         "borderWidth": 3,
                         "location": "None"
                    }
            
             Sample Response:
            
                    {
                        "id": 509,
                        "name": "Test-Swimlane-1",
                        "description": "Test purpose",
                        "label": "SM",
                        "processMapId": 232,
                        "sequenceNumber": 1,
                        "color": "White",
                        "backgroundColor": "Blue",
                        "borderColor": "Yellow",
                        "borderStyle": "Line",
                        "borderWidth": 3,
                        "version": 1,
                        "effectiveFrom": "2021-02-03T00:00:00",
                        "effectiveTo": null,
                        "createdDateTime": "2021-02-03T17:51:07.250676",
                        "createdUser": "pwesw1",
                        "lastUpdateDateTime": "2021-02-03T17:51:07.250676",
                        "lastUpdateUser": "pwesw1",
                        "location": "None"
                    }
             </remarks>
             <param name="swimLanesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.SwimLanesController.UpdateAllActivityGroups(System.Collections.Generic.List{EKS.ProcessMaps.Models.SwimLanesModel})">
             <summary>
             Updates all given swimlanes.
             </summary>
             <remarks>
             Sample Request:
            
                    [
                      {
                         "id": 26,
                         "name": "Test Name",
                         "description": "Test Desc",
                         "label": "Test Label",
                         "processMapId": 4,
                         "sequenceNumber": 1,
                         "color": "Test",
                         "backgroundColor": "Test",
                         "borderColor": "Test",
                         "borderStyle": "Test",
                         "borderWidth": 0,
                         "version": 2,
                         "effectiveFrom": "2021-01-08T06:30:12.308Z",
                         "effectiveTo": "2021-01-08T06:30:12.308Z",
                         "createdDateTime": "2021-01-08T06:30:12.308Z",
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateDateTime": "2021-01-08T06:30:12.308Z",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "location": "Test"
                         },
                         {
                             "id": 28,
                             "name": "Test",
                             "description": "Test",
                             "label": "Test",
                             "processMapId": 7,
                             "sequenceNumber": 0,
                             "color": "Test",
                             "backgroundColor": "Test",
                             "borderColor": "Test",
                             "borderStyle": "Test",
                             "borderWidth": 0,
                             "version": 1,
                             "effectiveFrom": "2021-01-08T06:30:12.308Z",
                             "effectiveTo": "2021-01-08T06:30:12.308Z",
                             "createdDateTime": "2021-01-08T06:30:12.308Z",
                             "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                             "lastUpdateDateTime": "2021-01-08T06:30:12.308Z",
                             "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                             "location": "Test"
                           }
                    ]
            
             Sample Response:
            
                    [
                      {
                         "id": 26,
                         "name": "Test Name1",
                         "description": "Test Desc1",
                         "label": "Test Label",
                         "processMapId": 4,
                         "sequenceNumber": 1,
                         "color": "Test",
                         "backgroundColor": "Test",
                         "borderColor": "Test",
                         "borderStyle": "Test",
                         "borderWidth": 0,
                         "version": 2,
                         "effectiveFrom": "2021-01-08T06:30:12.308Z",
                         "effectiveTo": "2021-01-08T06:30:12.308Z",
                         "createdDateTime": "2021-01-08T06:30:12.308Z",
                         "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "lastUpdateDateTime": "2021-01-08T06:30:12.308Z",
                         "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                         "location": "Test"
                         },
                         {
                             "id": 28,
                             "name": "Test",
                             "description": "Test",
                             "label": "Test",
                             "processMapId": 7,
                             "sequenceNumber": 0,
                             "color": "Test",
                             "backgroundColor": "Test",
                             "borderColor": "Test",
                             "borderStyle": "Test",
                             "borderWidth": 0,
                             "version": 1,
                             "effectiveFrom": "2021-01-08T06:30:12.308Z",
                             "effectiveTo": "2021-01-08T06:30:12.308Z",
                             "createdDateTime": "2021-01-08T06:30:12.308Z",
                             "createdUser": "pwesw1@pwesw2.onmicrosoft.com",
                             "lastUpdateDateTime": "2021-01-08T06:30:12.308Z",
                             "lastUpdateUser": "pwesw1@pwesw2.onmicrosoft.com",
                             "location": "Test"
                         }
                    ]
             </remarks>
             <param name="swimLanesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.SwimLanesController.UpdateActivityGroupsSequence(System.Collections.Generic.IEnumerable{EKS.ProcessMaps.Models.SequenceUpdateModel})">
             <summary>
             Updates sequence number of swimlanes.
             </summary>
             <remarks>
             Sample Request:
            
                    [
                        {
                             "id": 1108,
                             "sequenceNumber": 1,
                         },
                         {
                             "id": 1109,
                             "sequenceNumber": 2,
                         }
                    ]
            
             Sample Response:
            
                    [
                         {
                             "id": 1108,
                             "sequenceNumber": 1,
                         },
                         {
                             "id": 1109,
                             "sequenceNumber": 2,
                         }
                    ]
             </remarks>
             <param name="swimLanesModel"></param>
             <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.SwimLanesController.DeleteActivityGroups(System.Int32)">
             <summary>
             Delete swimlanes
             </summary>
             <remarks>
             Sample Request:
            
                    {
                         "id": 503
                    }
            
             Sample Response:
            
                    {
                        true
                    }
             </remarks>
             <param name="id"></param>
             <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.API.Controllers.UserPreferencesController">
            <summary>
            User preferences class
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.UserPreferencesController.#ctor(EKS.ProcessMaps.Business.Interfaces.IUserPreferencesAppService,EKS.Common.Logging.ILogManager)">
            <summary>
            User Preferences Controller constructor.
            </summary>
            <param name="userPreferencesAppService">IUserPreferencesAppService</param>
            <param name="logManager">ILogManager</param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.UserPreferencesController.GetUserPreferencesById(System.String)">
             <summary>
             Get user preferences by email.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                        "userIdentifier": "pwesw1@pwesw2.onmicrosoft.com"
                    }
            
             Sample Response:
            
                    {
                        "id": 2,
                        "userIdentifier": "pwesw1@pwesw2.onmicrosoft.com",
                        "tiles": "[4, 2, 3, 1]"
                    }
             </remarks>
             <param name="emailId"></param>
             <returns>UserPreferencesModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.UserPreferencesController.CreateUserPrefences(EKS.ProcessMaps.Models.UserPreferencesModel)">
             <summary>
             Create user preferences.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                        "userIdentifier": "pwesw1@pwesw2.onmicrosoft.com",
                        "tiles": "[4, 2, 3, 1]"
                    }
            
             Sample Response:
            
                    {
                        "id": 2,
                        "userIdentifier": "pwesw1@pwesw2.onmicrosoft.com",
                        "tiles": "[4, 2, 3, 1]"
                    }
             </remarks>
             <param name="userPreferencesModel"></param>
             <returns>UserPreferencesModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Controllers.UserPreferencesController.UpdateUserPreferences(EKS.ProcessMaps.Models.UserPreferencesModel)">
             <summary>
             Update user preferences.
             </summary>
             <remarks>
             Sample Request:
            
                    {
                        "id": 2
                        "userIdentifier": "pwesw1@pwesw2.onmicrosoft.com",
                        "tiles": "[4, 2, 1, 3]"
                    }
            
             Sample Response:
            
                    {
                        "id": 2,
                        "userIdentifier": "pwesw1@pwesw2.onmicrosoft.com",
                        "tiles": "[4, 2, 1, 3]"
                    }
             </remarks>
             <param name="userPreferencesModel"></param>
             <returns>UserPreferencesModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.ContainerItemAppService.GetKpackMapByKnowledgeAssetId(System.String,System.Int32)">
            <summary>
            GetKpackMapByKnowledgeAssetId
            </summary>
            <param name="knowledgeAssetId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.ContainerItemAppService.GetSubSubDisciplineName(EKS.ProcessMaps.Entities.PublishedContent.Disciplines)">
            <summary>
            GetSubSubDisciplineName
            </summary>
            <param name="disciplines"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetAppService.#ctor(EKS.ProcessMaps.DA.Interfaces.IKnowledgeAssetRepository,EKS.ProcessMaps.API.EKS.ProcessMaps.Business.Interfaces.PublishedContent.IKnowledgeAssetTransferService)">
            <summary>
            Constructor
            </summary>
            <param name="kaRepo"></param>
            <param name="transferService"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetAppService.GetProcessMapByIdOrContentId(System.Int32,System.String,System.Int32)">
            <summary>
            GetProcessMapByContentId
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetAppService.GetProcessMapFlowViewByIdOrContentId(System.Int32,System.String,System.Int32)">
            <summary>
            GetProcessMapFlowViewByIdOrContentId
            </summary>
            <param name="id"></param>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetAppService.GetStepFlowByIdOrContentIdAsync(System.Int32,System.String,System.Int32)">
            <summary>
            GetStepFlowContentIdAsync
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetAppService.GetStepByIdOrContentIdAsync(System.Int32,System.String,System.Int32)">
            <summary>
            GetStepByContentIdAsync
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetAppService.OrderBySequenceNumber(System.Collections.Generic.List{EKS.ProcessMaps.Models.SFSwimLanesModel})">
            <summary>
            OrderBySequenceNumber
            </summary>
            <param name="swimLanes"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetAppService.OrderByStepModel(EKS.ProcessMaps.Models.StepModel)">
            <summary>
            OrderByStepModel
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetAppService.AddActivityContainerToActivityBlock(EKS.ProcessMaps.Models.ProcessMapModel)">
            <summary>
            AddActivityContainerToActivityBlock
            </summary>
            <param name="processMap"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.#ctor(AutoMapper.IMapper,EKS.ProcessMaps.DA.Interfaces.IKnowledgeAssetRepository,EKS.ProcessMaps.API.EKS.ProcessMaps.Business.Interfaces.PublishedContent.IKnowledgeAssetTransferService,EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.ActivityBlocks},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.Connectors},EKS.ProcessMaps.Business.Interfaces.IProcessMapsAppService,EKS.ProcessMaps.Business.Interfaces.IProcessMapCommonAppService,EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ProcessMap},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.SwimLanes},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.Phases},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentPhases},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentExportCompliances},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentTags},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.NatureOfChange},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.PrivateAssets},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.KpacksMap},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityBlocks},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityConnections},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.UsersCache})">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="assetTypeRepo"></param>
            <param name="knowledgeAssetRepo"></param>
            <param name="privateAssetRepo"></param>
            <param name="disciplineRepo"></param>
            <param name="activityBlockRepo"></param>
            <param name="containerItemsRepo"></param>
            <param name="excelService"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.ReviseStepFlowAsync(EKS.ProcessMaps.Models.ProcessMapsReviseModel)">
            <summary>
            ReviseStepFlowAsync
            </summary>
            <param name="fromKnowledgeAssetId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.SaveAsStepFlowAsync(EKS.ProcessMaps.Models.ProcessMapsSaveAsModel)">
            <summary>
            SaveAsStepFlowAsync
            </summary>
            <param name="fromKnowledgeAssetId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneStepFlowAsync(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,System.String,System.Boolean)">
            <summary>
            CloneStepFlowAsync
            </summary>
            <param name="fromKnowledgeAsset"></param>
            <param name="isRevise"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.ClonePublicStepAsync(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,System.String,System.Boolean)">
            <summary>
            ClonePublicStepAsync
            </summary>
            <param name="fromKnowledgeAsset"></param>
            <param name="isRevise"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneProcessMapProperties(EKS.ProcessMaps.Entities.ProcessMap,System.String,System.Boolean)">
            <summary>
            CloneStepFlowProperties
            </summary>
            <param name="fromProcessMap"></param>
            <param name="isRevise"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneSwimLane(EKS.ProcessMaps.Entities.SwimLanes,System.Int32)">
            <summary>
            CloneSwimLane
            </summary>
            <param name="fromSwimLane"></param>
            <param name="toStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.ClonePhases(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,System.Int32)">
            <summary>
            ClonePhases
            </summary>
            <param name="knowledgeAsset"></param>
            <param name="toStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneContentPhase(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,System.Int32)">
            <summary>
            CloneContentPhase
            </summary>
            <param name="knowledgeAsset"></param>
            <param name="toStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneContentTag(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,System.Int32)">
            <summary>
            CloneContentTag
            </summary>
            <param name="knowledgeAsset"></param>
            <param name="toStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneNatureOfChange(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,EKS.ProcessMaps.Entities.ProcessMap,System.Boolean)">
            <summary>
            CloneNatureOfChange
            </summary>
            <param name="knowledgeAsset"></param>
            <param name="newStepFlow"></param>
            <param name="isRevise"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneKpackMap(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,EKS.ProcessMaps.Entities.ProcessMap)">
            <summary>
            CloneKpackMap
            </summary>
            <param name="knowledgeAsset"></param>
            <param name="toStepFlow"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneContentExportCompliances(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,System.Int32)">
            <summary>
            CloneContentExportCompliances
            </summary>
            <param name="knowledgeAsset"></param>
            <param name="toStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneStepsInStepFlow(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,System.Int32,System.Int32,System.Int32)">
            <summary>
            CloneStepsInStepFlow
            </summary>
            <param name="knowledgeAsset"></param>
            <param name="newMainSwimLaneId"></param>
            <param name="fromStepFlowId"></param>
            <param name="newStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.ClonePrivateAsset(EKS.ProcessMaps.Entities.PrivateAssets,System.Int32,System.Int32)">
            <summary>
            ClonePrivateAsset
            </summary>
            <param name="privateAsset"></param>
            <param name="newStepId"></param>
            <param name="newStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneStep(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            CloneStep
            </summary>
            <param name="fromMainSwimLaneId"></param>
            <param name="newMainSwimLaneId"></param>
            <param name="fromStepId"></param>
            <param name="newStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneStepItSelfInActivityBlock(System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            CloneStepItSelfInActivityBlock
            </summary>
            <param name="fromMaiSwimlaneId"></param>
            <param name="newMainSwimLaneId"></param>
            <param name="fromStepContentId"></param>
            <param name="newStepContentId"></param>
            <param name="newStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneStepActivityBlocks(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,System.Int32,System.Int32)">
            <summary>
            CloneStepActivityBlocks
            </summary>
            <param name="fromMaiSwimlaneId"></param>
            <param name="newMainSwimLaneId"></param>
            <param name="newStepFlowId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneActivityBlock(EKS.ProcessMaps.Entities.ActivityBlocks,System.Int32,System.Int32)">
            <summary>
            CloneActivityBlock
            </summary>
            <param name="fromActivityBlock"></param>
            <param name="newProcessMapId"></param>
            <param name="newStepContentId"></param>
            <param name="newSwimLaneId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneSwimLaneInStep(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets,EKS.ProcessMaps.Entities.ProcessMap)">
            <summary>
            CloneSwimLaneInStep
            </summary>
            <param name="kaStep"></param>
            <param name="newStep"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetCloneAppService.CloneActivityConnection">
            <summary>
            CloneActivityConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetExportAppService.#ctor(AutoMapper.IMapper,EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.AssetTypes},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.PrivateAssets},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.Disciplines},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.ActivityBlocks},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.ContainerItems},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.AssetStatements},EKS.ProcessMaps.Business.Interfaces.IExportExcelAppService)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="assetTypeRepo"></param>
            <param name="knowledgeAssetRepo"></param>
            <param name="privateAssetRepo"></param>
            <param name="disciplineRepo"></param>
            <param name="activityBlockRepo"></param>
            <param name="containerItemsRepo"></param>
            <param name="excelService"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetExportAppService.ExportStepFlowToExcel(System.Int32,System.String)">
            <summary>
            ExportProcessMapToExcel
            </summary>
            <param name="knowledgeAssetId"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetExportAppService.GetActivityContainerByActivityPageId(System.Int32)">
            <summary>
            GetActivityContainerByActivityPageId
            </summary>
            <param name="activityPageId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetExportAppService.GetChildrenByParentId(System.Int64,System.Collections.Generic.List{EKS.ProcessMaps.Models.PublishedContent.ContainerItemsExportModel})">
            <summary>
            GetChildrenByParentId
            </summary>
            <param name="parentId"></param>
            <param name="allItems"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetExportAppService.PrintActivityContainerChilds(System.Collections.Generic.List{EKS.ProcessMaps.Models.ProcessMapExcelModel},System.Collections.Generic.List{EKS.ProcessMaps.Models.PublishedContent.ContainerItemsExportModel},System.Collections.Generic.ICollection{EKS.ProcessMaps.Entities.PublishedContent.AssetTypes},System.String,System.String)">
            <summary>
            PrintActivityContainerChilds
            </summary>
            <param name="processMapExcels"></param>
            <param name="acContainers"></param>
            <param name="contentTypes"></param>
            <param name="indents"></param>
            <param name="url"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.#ctor(AutoMapper.IMapper,EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.Classifiers},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentType},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.UsersCache},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.Usclassifications},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.Disciplines},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.ContainerItems},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.ActivityBlocks},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.AssetStatuses},EKS.ProcessMaps.DA.Interfaces.IKnowledgeAssetRepository,EKS.ProcessMaps.API.EKS.ProcessMaps.Business.Interfaces.PublishedContent.IPublishedCommonAppService)">
            <summary>
            KnowledgeAssetTransferService
            </summary>
            <param name="mapper"></param>
            <param name="classifierRepo"></param>
            <param name="userCacheRepo"></param>
            <param name="classificationRepo"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.TransferKnowledgeAsset_To_StepFlowModel(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets)">
            <summary>
            TransferKnowledgeAsset_To_StepFlowModel
            </summary>
            <param name="ka"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.TransferKnowledgeAsset_To_ProcessMap(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets)">
            <summary>
            TransferKnowledgeAssetToProcessMap
            </summary>
            <param name="ka"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.TransferKnowledgeAsset_To_ProcessMapModel(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets)">
            <summary>
            TransferKnowledgeAssetToProcessMapModel
            </summary>
            <param name="ka"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.TransferKnowledgeAsset_To_StepModel(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets)">
            <summary>
            TransferKnowledgeAsset_To_StepModel
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.TransferAssetPartToNatureOfChange(System.Collections.Generic.ICollection{EKS.ProcessMaps.Entities.PublishedContent.AssetParts})">
            <summary>
            TransferAssetPartToNatureOfChange
            </summary>
            <param name="assetParts"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetActivityContainerByActivityPageContentIdId(System.String)">
            <summary>
            GetActivityContainerByActivityPageContentIdId
            </summary>
            <param name="activityPageContentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.CreateMapping_From_KnowledgeAsset_To_ProcessMap">
            <summary>
            CreateMapping_From_KnowledgeAsset_To_ProcessMap
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.CreateMapping_From_KnowledgeAsset_To_ProcessMapModel">
            <summary>
            CreateMapping_From_KnowledgeAsset_To_ProcessMap
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.CreateMapping_From_KnowledgeAsset_To_StepFlowModel">
            <summary>
            CreateMapping_From_KnowledgeAsset_To_StepFlowModel
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetClassifierId(System.Collections.Generic.ICollection{EKS.ProcessMaps.Entities.PublishedContent.AssetUsers})">
            <summary>
            GetClassifierId
            </summary>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetRelatedPeople(System.Collections.Generic.ICollection{EKS.ProcessMaps.Entities.PublishedContent.AssetUsers},System.String)">
            <summary>
            GetRelatedPeople
            </summary>
            <param name="users"></param>
            <param name="userRoleCode"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetExportAuthorityId(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets)">
            <summary>
            GetExportAuthorityId
            </summary>
            <param name="ka"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetControllingProgramId(System.Collections.Generic.ICollection{EKS.ProcessMaps.Entities.PublishedContent.AssetControllingPrograms})">
            <summary>
            GetControllingProgramId
            </summary>
            <param name="ctrl"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetPurpose(System.Collections.Generic.ICollection{EKS.ProcessMaps.Entities.PublishedContent.AssetParts})">
            <summary>
            GetPurpose
            </summary>
            <param name="assetParts"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetKeywords(System.Collections.Generic.ICollection{EKS.ProcessMaps.Entities.PublishedContent.AssetKeywords})">
            <summary>
            GetKeywords
            </summary>
            <param name="assetKeywords"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.TransferSFSwimLaneModel(EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets)">
            <summary>
            TransferSFSwimLaneModel
            </summary>
            <param name="knowledgeAsset"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetDisciplineText(System.Nullable{System.Int32})">
            <summary>
            GetDisciplineText
            </summary>
            <param name="disciplineId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.GetChildrenByParentId(System.Int64,System.Collections.Generic.List{EKS.ProcessMaps.Models.ActivityContainerModel},System.Collections.Generic.List{EKS.ProcessMaps.Entities.ContentType})">
            <summary>
            GetChildrenByParentId
            </summary>
            <param name="parentId"></param>
            <param name="allItems"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.KnowledgeAssetTransferService.TransferAssetTypeCodeToId(System.String)">
            <summary>
            TransferAssetTypeCodeToId
            </summary>
            <param name="assetTypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.PublishedCommonAppService.#ctor(EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets},EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository{EKS.ProcessMaps.Entities.PublishedContent.AssetStatuses})">
            <summary>
            PublishedCommonAppService
            </summary>
            <param name="mapper"></param>
            <param name="kaRepo"></param>
            <param name="assetStatusRepo"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.EKS.ProcessMaps.Business.PublishedContent.PublishedCommonAppService.GetKnowledgeAssetStatus(System.String,System.Int32)">
            <summary>
            GetKnowledgeAssetStatus
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.API.Helper.StringHelper.BuildDisciplineText(EKS.ProcessMaps.Entities.PublishedContent.Disciplines)">
            <summary>
            BuildDisciplineText
            </summary>
            <param name="dis"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.API.Program">
            <summary>
            Main Program
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.API.Program.Main(System.String[])">
            <summary>
            Main Method Of Program
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Program.CreateHostBuilder(System.String[])">
            <summary>
            CreateHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.API.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor - Startup
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:EKS.ProcessMaps.API.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices - This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EKS.ProcessMaps.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure - This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IActivitiesAppService">
            <summary>
            IActivityGroupsAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IActivityBlockTypesAppService">
            <summary>
            Interface - IActivityBlockTypesAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IActivityConnectionsAppService">
            <summary>
            Interface - IActivityConnectionsAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IActivityGroupsAppService">
            <summary>
            Interface - IActivityGroupsAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IActivityPagesAppService">
            <summary>
            Interface - IActivityPagesAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IAuthorizationLogService">
            <summary>
            IAuthorizationLogService
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.Interfaces.IAuthorizationLogService.AddAuthorizationLogAsync(System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            AddAuthorizationLogAsync
            </summary>
            <param name="operationCode"></param>
            <param name="user"></param>
            <param name="contentId"></param>
            <param name="version"></param>
            <param name="outcome"></param>
            <param name="nationality"></param>
            <param name="pwEmploymentCode"></param>
            <param name="groups"></param>
            <param name="usJurisdictionId"></param>
            <param name="usClassificationId"></param>
            <param name="outsourcableInd"></param>
            <param name="confidentialityId"></param>
            <param name="remoteAddress"></param>
            <param name="forwardedFor"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.ICustomAppService">
            <summary>
            ICustomAppService
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.Interfaces.ICustomAppService.GetContentData(System.Int32,System.String)">
            <summary>
            GetContentData
            </summary>
            <param name="Id"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IExportExcelAppService">
            <summary>
            Interface - IProcessMapsAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IMigrateMapsAppService">
            <summary>
            IMigrateMapsAppService
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.Interfaces.IMigrateMapsAppService.MigrateMapsAsync(EKS.ProcessMaps.Models.ContentAssetTypeModel)">
            <summary>
            MigrateMapsAsync.
            </summary>
            <param name="contentAssetTypeModel"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IProcessMapCommonAppService">
            <summary>
            Interface of IPublicStepsAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IProcessMapMetaAppService">
            <summary>
            Interface - IProcessMapMetaAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IProcessMapsAppService">
            <summary>
            Interface - IProcessMapsAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IPublicStepsAppService">
            <summary>
            Interface of IPublicStepsAppService
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.Interfaces.IPublicStepsAppService.CreatePublicStepsAsync(EKS.ProcessMaps.Models.ProcessMapModel)">
            <summary>
            Create public steps.
            </summary>
            <param name="processMapModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.Interfaces.IPublicStepsAppService.UpdatePublicStepsPurposeAsync(EKS.ProcessMaps.Models.PublicStepsPurposeModel)">
            <summary>
            Update purpose of public steps
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.Interfaces.IUserPreferencesAppService">
            <summary>
            Interface - IUserPreferencesAppService
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.ActivitiesAppService">
            <summary>
            CRUD operations of activity blocks.
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.ActivityBlockTypesAppService">
            <summary>
            App service class for activity block types
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ActivityBlockTypesAppService.#ctor(EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityBlockTypes},AutoMapper.IMapper)">
            <summary>
            Constructor - ActivityBlockTypesAppService
            </summary>
            <param name="activityBlockTypesRepo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ActivityBlockTypesAppService.GetAllActivityBlockTypesAsync">
            <summary>
            Get all activity block types
            </summary>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.ActivityConnectionsAppService">
            <summary>
            App service class for activity connections
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ActivityConnectionsAppService.#ctor(EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityConnections},AutoMapper.IMapper)">
            <summary>
            Constructor - ActivityConnectionsAppService
            </summary>
            <param name="activityConnections"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ActivityConnectionsAppService.CreateActivityConnectionsAsync(EKS.ProcessMaps.Models.ActivityConnectionsModel)">
            <summary>
            Create activity connections
            </summary>
            <param name="activityConnectionsModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ActivityConnectionsAppService.DeleteActivityConnectionsAsync(System.Int64)">
            <summary>
            Delete activity connections on basis of id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ActivityConnectionsAppService.UpdateActivityConnectionsAsync(EKS.ProcessMaps.Models.ActivityConnectionsModel)">
            <summary>
            Update activity connections
            </summary>
            <param name="activityConnectionsModel"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.ActivityPagesAppService">
            <summary>
            App service class for activity pages
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ActivityPagesAppService.#ctor(EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityPage},AutoMapper.IMapper)">
            <summary>
            Constructor - ActivityPagesAppService
            </summary>
            <param name="activityPagesRepo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ActivityPagesAppService.GetAllActivityPagesAsync">
            <summary>
            Get all activity pages
            </summary>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.AuthorizationLogService">
            <summary>
            AuthorizationLogService
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.AuthorizationLogService.#ctor(EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.AuthorizationLog})">
            <summary>
            AuthorizationLogService
            </summary>
            <param name="authorizationLogRepo"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.AuthorizationLogService.AddAuthorizationLogAsync(System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            AddAuthorizationLogAsync
            </summary>
            <param name="operationCode"></param>
            <param name="user"></param>
            <param name="contentId"></param>
            <param name="version"></param>
            <param name="outcome"></param>
            <param name="nationality"></param>
            <param name="pwEmploymentCode"></param>
            <param name="groups"></param>
            <param name="usJurisdictionId"></param>
            <param name="usClassificationId"></param>
            <param name="outsourcableInd"></param>
            <param name="confidentialityId"></param>
            <param name="remoteAddress"></param>
            <param name="forwardedFor"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.CustomAppService">
            <summary>
            
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.CustomAppService.#ctor(Microsoft.Extensions.Configuration.IConfiguration,EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ProcessMap},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ToDoTask})">
            <summary>
            
            </summary>
            <param name="configuration"></param>       
            <param name="processMapsRepo"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.CustomAppService.GetContentData(System.Int32,System.String)">
            <summary>
            GetContentData
            </summary>
            <param name="Id"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.CustomAppService.GetAuthoringContentOutputData(System.Int32,System.String)">
            <summary>
            GetAuthoringContentOutputData
            </summary>
            <param name="Id"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.CustomAppService.AddCoAuthor(System.Int32,System.String,EKS.ProcessMaps.Models.ContentOutputModel)">
            <summary>
            AddCoAuthor
            </summary>
            <param name="Id"></param>
            <param name="contentType"></param>
            <param name="contentOutputModel"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.CustomAppService.GetContentTypeId(System.String)">
            <summary>
            GetContentTypeId
            </summary>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.ExportExcelAppService">
            <summary>
            ProcessMapsAppService
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ExportExcelAppService.Hyperlink(System.String,System.String,System.String)">
            <summary>
            Hyperlink
            </summary>
            <param name="universalUrl"></param>
            <param name="contentType"></param>
            <param name="contentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ExportExcelAppService.CreateExcel(System.Collections.Generic.List{EKS.ProcessMaps.Models.ProcessMapExcelModel},System.String,System.String)">
            <summary>
            CreateExcel
            </summary>
            <param name="stepFlowModels"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.MigrateMapsAppService">
            <summary>
            CRUD operations of activity blocks.
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.MigrateMapsAppService.MigrateMapsAsync(EKS.ProcessMaps.Models.ContentAssetTypeModel)">
            <summary>
            MigrateMapsAsync.
            </summary>
            <param name="contentAssetTypeModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.MigrateMapsAppService.CreateMigratedContentAsync(System.String,System.Int64,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            CreateMigratedContentAsync.
            </summary>
            <param name="currentStatus">string</param>
            <param name="contentid">numeric</param>
            <param name="contentNo">XXX-X-1234</param>
            <param name="contentType"></param>
            <param name="title">string</param>
            <param name="version"></param>
            <returns>MigratedContentModel</returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.MigrateMapsAppService.GenerateContentId(EKS.ProcessMaps.Entities.ProcessMap,EKS.ProcessMaps.Models.ProcessMapInputOutputModel)">
            <summary>
            ContentId Genreation Generation for Process Maps
            </summary>
            <param name="resultData"></param>
            <param name="resultDataModel"></param>
            <returns>string contentId</returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.MigrateMapsAppService.AddStep(EKS.ProcessMaps.Models.ProcessMapModel,EKS.ProcessMaps.Models.ProcessMapInputOutputModel)">
            <summary>
            AddStep.
            </summary>
            <param name="stepModel"></param>
            <param name="pmModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.MigrateMapsAppService.AddNatureOfChange(EKS.ProcessMaps.Models.ProcessMapModel,System.String)">
            <summary>
            AddNatureOfChange.
            </summary>
            <param name="mapModel"></param>
            <param name="nocDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.ProcessMapCommonAppService">
            <summary>
            Public steps related crud operations
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapCommonAppService.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Configuration.IConfiguration,EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ProcessMap},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentInformation},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentType},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.AssetStatus})">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="config"></param>
            <param name="processMapsRepo"></param>
            <param name="contentInformationRepo"></param>
            <param name="contentTypeRepo"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapCommonAppService.GenerateContentId(System.Int32,System.Nullable{System.Int32},System.String,System.Boolean)">
            <summary>
            GenerateContentId
            </summary>
            <param name="processMapId"></param>
            <param name="assetTypeId"></param>
            <param name="createdUser"></param>
            <param name="isPrivateAsset"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapCommonAppService.GetContentIdInfo(System.String,System.Boolean)">
            <summary>
            GetContentIdInfo
            </summary>
            <param name="identifier"></param>
            <param name="isPrivateAsset"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapCommonAppService.GetCGContentID(System.Boolean)">
            <summary>
            GetCGContentID
            </summary>
            <param name="isPrivateAsset"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapCommonAppService.UpdateContentIdAsync(System.Int32,System.String)">
            <summary>
            UpdateContentIdAsync
            </summary>
            <param name="processMapId"></param>
            <param name="contentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapCommonAppService.GetAssetStatusAsync(System.Int32)">
            <summary>
            Get asset status name
            </summary>
            <param name="assetStatusId"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.ProcessMapsAppService">
            <summary>
            ProcessMapsAppService
            </summary>
            <summary>
            ProcessMapsAppService
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.#ctor(EKS.Common.Logging.ILogManager,EKS.ProcessMaps.DA.Interfaces.IProcessMapRepository,EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ProcessMap},AutoMapper.IMapper,Microsoft.Extensions.Configuration.IConfiguration,EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityBlocks},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.SwimLanes},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityConnections},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.Phases},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentPhases},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentExportCompliances},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentTags},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentInformation},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.NatureOfChange},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.PrivateAssets},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityPage},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ActivityContainer},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.Discipline},EKS.ProcessMaps.Business.Interfaces.IExportExcelAppService,EKS.ProcessMaps.Business.Interfaces.IProcessMapCommonAppService,EKS.ProcessMaps.API.EKS.ProcessMaps.Business.Interfaces.PublishedContent.IKnowledgeAssetAppService,EKS.ProcessMaps.API.EKS.ProcessMaps.Business.Interfaces.PublishedContent.IPublishedCommonAppService)">
            <summary>
            ProcessMapRepository
            </summary>
            <param name="processMapsRepo"></param>
            <param name="mapper">mapper</param>
            <param name="config">mapper</param>
            <param name="activitiesRepo"></param>
            <param name="activityGroupsRepo"></param>
            <param name="processMapMetaRepo"></param>
            <param name="activityDocumentsRepo"></param>
            <param name="activityMetaRepo"></param>
            <param name="activityConnectionsRepo"></param>
            <param name="phasesRepo"></param>
            <param name="contentPhaseRepo"></param>
            <param name="contentExportCompliancesRepo"></param>
            <param name="contentTagsRepo"></param>
            <param name="disciplineCodeRepo"></param>
            <param name="contentInformationRepo"></param>
            <param name="contentTypeRepo"></param>
            <param name="natureOfChangeRepo"></param>
            <param name="privateAssetsRepo"></param>
            <param name="phaseRepo"></param>
            <param name="tagRepo"></param>
            <param name="activityContainerRepo"></param>
            <param name="disciplineRepo"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetAllProcessMapsAsync">
            <summary>
            Get all process map
            </summary>
            <returns>List of process map</returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.DeleteProcessMapAsync(System.Int64)">
            <summary>
            DeleteProcessMapAsync
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetAllProcessMapsByUserIdAsync(System.String)">
            <summary>
            Get all process map record on basis of user id.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetProcessMapByIdAsync(System.Int64)">
            <summary>
            Get process map by id.
            </summary>
            <param name="id">process map id</param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetProcessMapFlowViewByIdAsync(System.Int64,System.String,System.Int32)">
            <summary>
            GetProcessMapFlowViewByIdAsync
            </summary>
            <param name="id"></param>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.AddActivityContainerToActivityBlock(EKS.ProcessMaps.Models.ProcessMapModel)">
            <summary>
            AddActivityContainerToActivityBlock
            </summary>
            <param name="processMap"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetContentPhasesByProcessMapId(System.Int64,System.Nullable{System.Int32},System.Collections.Generic.List{EKS.ProcessMaps.Entities.ContentPhases})">
            <summary>
            GetContentPhasesByProcessMapId
            </summary>
            <param name="id"></param>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetContentTagByProcessMapId(System.Int64,System.Nullable{System.Int32},System.Collections.Generic.List{EKS.ProcessMaps.Entities.ContentTags})">
            <summary>
            GetContentTagByProcessMapId
            </summary>
            <param name="id"></param>
            <param name="contentTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.DeleteContentPhase(System.Int32)">
            <summary>
            DeleteContentPhase
            </summary>
            <param name="processMapId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.DeleteContentTag(System.Int32)">
            <summary>
            DeleteContentTag
            </summary>
            <param name="processMapId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GenerateContentId(EKS.ProcessMaps.Entities.ProcessMap,EKS.ProcessMaps.Models.ProcessMapInputOutputModel)">
            <summary>
            ContentId Genreation Generation for Process Maps
            </summary>
            <param name="resultData"></param>
            <param name="resultDataModel"></param>
            <returns>string contentId</returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetProcessMapIdByContentIdAndVersionAsync(System.String,System.Int32)">
            <summary>
            GetProcessMapIdByContentIdAndVersionAsync.
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetActivityPageByContentId(System.String)">
            <summary>
            GetActivityPageByContentIdAsync.
            </summary>
            <param name="contentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetActivityContainerByActivityPageId(System.Int64)">
            <summary>
            GetActivityContainerByActivityPageId.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetChildListByParentId(System.Int64,System.Collections.Generic.List{EKS.ProcessMaps.Models.ActivityContainerModel})">
            <summary>
            GetChildListByParentId
            </summary>
            <param name="id"></param>
            <param name="objData"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetStepFlowByIdOrContentIdAsync(System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            GetAllStepFlowsAsync.
            </summary>
            <param name="id"></param>
            <param name="contentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.GetStepByIdOrContentIdAsync(System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            GetStepByIdOrContentIdAsync.
            </summary>
            <param name="id"></param>
            <param name="contentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.CreateStepAsync(EKS.ProcessMaps.Models.ActivityBlocksModel)">
            <summary>
            CreateStepAsync.
            </summary>
            <param name="activityBlock"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.DeleteStep(System.Int64)">
            <summary>
            DeleteStep.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.ProcessMapsAppService.RemoveStepFromStepFlowAsync(System.Int32,System.String)">
            <summary>
            RemoveStepFromStepFlowAsync
            </summary>
            <param name="stepFlowId"></param>
            <param name="stepContentId"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.PublicStepsAppService">
            <summary>
            Public steps related crud operations
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.PublicStepsAppService.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Configuration.IConfiguration,EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ProcessMap},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentPhases},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentTags},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentInformation},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.ContentType},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.Phases},EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.NatureOfChange},EKS.ProcessMaps.Business.Interfaces.IProcessMapCommonAppService)">
            <summary>
            Constructor of public steps
            </summary>
            <param name="mapper"></param>
            <param name="config"></param>
            <param name="processMapsRepo"></param>
            <param name="contentPhasesRepo"></param>
            <param name="contentTagsRepo"></param>
            <param name="contentInformationRepo"></param>
            <param name="contentTypeRepo"></param>
            <param name="phasesRepo"></param>
            <param name="natureOfChangeRepo"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.PublicStepsAppService.CreatePublicStepsAsync(EKS.ProcessMaps.Models.ProcessMapModel)">
            <summary>
            Create public steps.
            </summary>
            <param name="processMapModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.PublicStepsAppService.AddPhase(System.Nullable{System.Int32})">
            <summary>
            Add phases
            </summary>
            <param name="processMapId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.PublicStepsAppService.CreateNatureOfChange(EKS.ProcessMaps.Models.ProcessMapModel,EKS.ProcessMaps.Entities.ProcessMap,System.String)">
            <summary>
            Create nature of change.
            </summary>
            <param name="processMapModel"></param>
            <param name="resultData"></param>
            <param name="contentId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.PublicStepsAppService.GenerateContentId(EKS.ProcessMaps.Entities.ProcessMap,EKS.ProcessMaps.Models.PublicStepsInputOutputModel)">
            <summary>
            ContentId Genreation Generation for Process Maps
            </summary>
            <param name="resultData"></param>
            <param name="resultDataModel"></param>
            <returns>string contentId</returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.PublicStepsAppService.UpdatePublicStepsPurposeAsync(EKS.ProcessMaps.Models.PublicStepsPurposeModel)">
            <summary>
            Update purpose of public steps
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.Business.PublishedContent.ProcessMapAppService">
            <summary>
            Published stepflow and publsihed step operation.
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Business.UserPreferencesAppService">
            <summary>
            App service class for user preferences
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Business.UserPreferencesAppService.#ctor(EKS.ProcessMaps.DA.Interfaces.IRepository{EKS.ProcessMaps.Entities.UserPreferences},AutoMapper.IMapper)">
            <summary>
            Constructor - UserPreferencesAppService
            </summary>
            <param name="userPrefencesRepo"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:EKS.ProcessMaps.Business.UserPreferencesAppService.CreateUserPreferencesAsync(EKS.ProcessMaps.Models.UserPreferencesModel)">
            <summary>
            Create the user preferences
            </summary>
            <param name="userPreferencesModel"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.UserPreferencesAppService.GetUserPreferencesByIdAsync(System.String)">
            <summary>
            Get user preferences by emailId
            </summary>
            <param name="emailId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.Business.UserPreferencesAppService.UpdateUserPreferencesAsync(EKS.ProcessMaps.Models.UserPreferencesModel)">
            <summary>
            Update the user preferences
            </summary>
            <param name="userPreferencesModel"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1">
            <summary>
            IPublishContentRepository
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.AddAsyn(`0)">
            <summary>
            AddAsyn
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Count">
            <summary>
            Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.CountAsync">
            <summary>
            CountAsync
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.DeleteAsyn(`0)">
            <summary>
            DeleteAsyn
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.DeleteAll(System.Collections.Generic.ICollection{`0})">
            <summary>
            DeleteAll
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.FindAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAll
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.FindAllNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAllNoTracking
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.FindAllAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAllAsync
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAsync
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindBy
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.FindByAsyn(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindByAsyn
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Get(System.Int32)">
            <summary>
            Get
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.GetAll">
            <summary>
            GetAll
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Query">
            <summary>
            Query
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Queryable">
            <summary>
            Queryable
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.GetAllAsyn">
            <summary>
            GetAllAsyn
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            GetAllIncluding
            </summary>
            <param name="includeProperties"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.GetAsync(System.Int32)">
            <summary>
            GetAsync
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.SaveAsync">
            <summary>
            SaveAsync
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.Update(`0,System.Object)">
            <summary>
            Update
            </summary>
            <param name="t"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IPublishContentRepository`1.UpdateExAsyn(`0,System.Object)">
            <summary>
            UpdateAsyn
            </summary>
            <param name="t"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:EKS.ProcessMaps.DA.Interfaces.IRepository`1">
            <summary>
            IRepository
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.AddAsyn(`0)">
            <summary>
            AddAsyn
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Count">
            <summary>
            Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.CountAsync">
            <summary>
            CountAsync
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.DeleteAsyn(`0)">
            <summary>
            DeleteAsyn
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.DeleteAll(System.Collections.Generic.ICollection{`0})">
            <summary>
            DeleteAll
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.FindAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAll
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.FindAllNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAllNoTracking
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.FindAllAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAllAsync
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAsync
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindBy
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.FindByAsyn(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindByAsyn
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Get(System.Int32)">
            <summary>
            Get
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.GetAll">
            <summary>
            GetAll
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Query">
            <summary>
            Query
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.GetAllAsyn">
            <summary>
            GetAllAsyn
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            GetAllIncluding
            </summary>
            <param name="includeProperties"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.BeginTransaction">
            <summary>
            BeginTransaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.GetAsync(System.Int32)">
            <summary>
            GetAsync
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.SaveAsync">
            <summary>
            SaveAsync
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.Update(`0,System.Object)">
            <summary>
            Update
            </summary>
            <param name="t"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.UpdateExAsyn(`0,System.Object)">
            <summary>
            UpdateAsyn
            </summary>
            <param name="t"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Interfaces.IRepository`1.BeginTransaction">
            <summary>
            BeginTransaction
            </summary>
            <returns></returns>
        </member>
        <member name="P:EKS.ProcessMaps.DA.KnowledgeMapContext.ActivityContainer">
            ActivityContainer
        </member>
        <member name="P:EKS.ProcessMaps.DA.KnowledgeMapContext.AssetStatus">
            AssetStatus
        </member>
        <member name="P:EKS.ProcessMaps.DA.KnowledgeMapContext.MigratedContent">
            MigratedContent
        </member>
        <member name="T:EKS.ProcessMaps.DA.KnowledgePackRepository">
            <summary>
            Repository
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:EKS.ProcessMaps.DA.ProcessMapRepository">
            <summary>
            Repository
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EKS.ProcessMaps.DA.ProcessMapRepository.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.ProcessMapRepository.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.DA.KnowledgeAssetRepository">
            <summary>
            Repository
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EKS.ProcessMaps.DA.KnowledgeAssetRepository.#ctor(EKS.ProcessMaps.DA.PublishContentContext)">
            <summary>
            Contructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.KnowledgeAssetRepository.GetKnowledgeAssets_NoStepAsyn(System.Int32,System.String,System.Int32)">
            <summary>
            GetKnowledgeAssetsNoTracking
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.KnowledgeAssetRepository.GetKnowledgeAssets_ForCloneAsyn(System.Int32)">
            <summary>
            GetKnowledgeAssets_ForCloneAsyn
            </summary>
            <param name="knowledgeAssetId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.KnowledgeAssetRepository.GetKnowledgeAssets_ForStepFlowAsyn(System.Int32,System.String,System.Int32)">
            <summary>
            GetKnowledgeAssets_ForStepFlowAsyn
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.KnowledgeAssetRepository.GetKnowledgeAssets_ForStepAsyn(System.Int32,System.String,System.Int32)">
            <summary>
            GetKnowledgeAssets_ForStepAsyn
            </summary>
            <param name="contentId"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.KnowledgeAssetRepository.GetKnowledgeAssets_ForClone_StepAsyn(System.Int32)">
            <summary>
            GetKnowledgeAssets_ForClone_StepAsyn
            </summary>
            <param name="knowledgeAssetStepId"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.KnowledgeAssetRepository.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.KnowledgeAssetRepository.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.DA.PublishContentRepository`1">
            <summary>
            PublishContentRepository
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.#ctor(EKS.ProcessMaps.DA.PublishContentContext)">
            <summary>
            Constructor - PublishContentRepository
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.GetAll">
            <summary>
            GetAll - IQueryable
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Query">
            <summary>
            Query
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Queryable">
            <summary>
            Queryable
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.GetAllAsyn">
            <summary>
            GetAllAsyn
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Get(System.Int32)">
            <summary>
            Get
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.GetAsync(System.Int32)">
            <summary>
            GetAsync
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.AddAsyn(`0)">
            <summary>
            AddAsyn
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAsync
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.FindAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAll
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.FindAllNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAllNoTracking
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.FindAllAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAllAsync
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.DeleteAsyn(`0)">
            <summary>
            DeleteAsyn
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.DeleteAll(System.Collections.Generic.ICollection{`0})">
            <summary>
            DeleteAll Synchrounusly
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Update(`0,System.Object)">
            <summary>
            Update
            </summary>
            <param name="t"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.UpdateExAsyn(`0,System.Object)">
            <summary>
            UpdateAsyn
            </summary>
            <param name="t"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Count">
            <summary>
            Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.CountAsync">
            <summary>
            CountAsync
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.SaveAsync">
            <summary>
            SaveAsync
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindBy
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.FindByAsyn(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindByAsyn
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            GetAllIncluding
            </summary>
            <param name="includeProperties"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.PublishContentRepository`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.DA.Repository`1">
            <summary>
            Repository
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.#ctor(EKS.ProcessMaps.DA.KnowledgeMapContext)">
            <summary>
            Constructor - Repository
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.GetAll">
            <summary>
            GetAll - IQueryable
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Query">
            <summary>
            Query
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.GetAllAsyn">
            <summary>
            GetAllAsyn
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Get(System.Int32)">
            <summary>
            Get
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.GetAsync(System.Int32)">
            <summary>
            GetAsync
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.AddAsyn(`0)">
            <summary>
            AddAsyn
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Find
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAsync
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.FindAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAll
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.FindAllNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAllNoTracking
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.FindAllAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindAllAsync
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Delete(`0)">
            <summary>
            Delete
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.DeleteAsyn(`0)">
            <summary>
            DeleteAsyn
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.DeleteAll(System.Collections.Generic.ICollection{`0})">
            <summary>
            DeleteAll Synchrounusly
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Update(`0,System.Object)">
            <summary>
            Update
            </summary>
            <param name="t"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.UpdateExAsyn(`0,System.Object)">
            <summary>
            UpdateAsyn
            </summary>
            <param name="t"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Count">
            <summary>
            Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.CountAsync">
            <summary>
            CountAsync
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.SaveAsync">
            <summary>
            SaveAsync
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.FindBy(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindBy
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.FindByAsyn(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            FindByAsyn
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.GetAllIncluding(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            GetAllIncluding
            </summary>
            <param name="includeProperties"></param>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.BeginTransaction">
            <summary>
            BeginTransaction
            </summary>
            <returns></returns>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:EKS.ProcessMaps.DA.Repository`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Entities.ActivityBlocks">
            <summary>
            Entity of activity blocks.
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.SwimLaneId">
            SwimLaneId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.ActivityTypeId">
            ActivityTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.SequenceNumber">
            SequenceNumber
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.Color">
            Color
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.BorderColor">
            BorderColor
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.BorderStyle">
            BorderStyle
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.BorderWidth">
            BorderWidth
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.LocationX">
            LocationX
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.LocationY">
            LocationY
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.AssetContentId">
            AssetContentId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.ProtectedInd">
            ProtectedInd
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.RequiredInd">
            RequiredInd
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.ProcessMapId">
            ProcessMapId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.PhaseId">
            PhaseId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.Length">
            Length
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.Width">
            Width
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.ActivityType">
            ActivityType
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.ProcessMap">
            ProcessMap
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.SwimLane">
            SwimLane
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.Phase">
            Phase
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlocks.ActivityConnections">
            ActivityConnections
        </member>
        <member name="T:EKS.ProcessMaps.Entities.ActivityBlockTypes">
            <summary>
            Entities of activity block types.
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityBlockTypes.ActivityBlocks">
            ActivityBlocks
        </member>
        <member name="T:EKS.ProcessMaps.Entities.ActivityContainer">
            <summary>
            ActivityContainer Entity
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.ActivityContainerId">
            ActivityContainerId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.ActivityPageId">
            ActivityPageId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.ContentItemId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.ContentTypeId">
            ContentTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.ContentNo">
            ContentNo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.US_JC">
            US_JC
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.Url">
            Url
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.ParentActivityContainerId">
            ParentActivityContainerId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.OrderNo">
            OrderNo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.CreatedOn">
            CreatedOn
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.CreatorClockId">
            CreatorClockId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.ModifiedOn">
            ModifiedOn
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.ModifierClockId">
            ModifierClockId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityContainer.Guidance">
            Guidance
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.Id">
            ActivityPageId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.SubDisciplineId">
            SubDisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.SubSubDisciplineId">
            SubSubDisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.SubSubSubDisciplineId">
            SubSubSubDisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.TPMDate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ActivityPage.AssetType">
            AssetStatus
        </member>
        <member name="T:EKS.ProcessMaps.Entities.AuthorizationLog">
            <summary>
            AuthorizationLog
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.AuthorizationLogId">
            AuthorizationLogId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.User">
            User
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.OperationCode">
            OperationCode
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.KnowledgeAssetId">
            KnowledgeAssetId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.RequestDateTime">
            RequestDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.Outcome">
            Outcome
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.Nationality">
            Nationality
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.PWEmploymentCode">
            PWEmploymentCode
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.Groups">
            Groups
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.USJurisdictionId">
            USJurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.USClassificationId">
            USClassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.OutsourcableInd">
            OutsourcableInd
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.ControllingPrograms">
            ControllingPrograms
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.RemoteAddress">
            RemoteAddress
        </member>
        <member name="P:EKS.ProcessMaps.Entities.AuthorizationLog.ForwardedFor">
            ForwardedFor
        </member>
        <member name="T:EKS.ProcessMaps.Entities.ContentPhases">
            <summary>
            ContentPhases
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.ContentPhaseId">
            ContentPhaseId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.TypeId">
            TypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.PhaseId">
            PhaseId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentPhases.Phase">
            Phase
        </member>
        <member name="T:EKS.ProcessMaps.Entities.ContentType">
            <summary>
            ContentType
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.ContentTypeId">
            ContentTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.Code">
            Code
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.Status">
            Status
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.CreatedOn">
            CreatedOn
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.CreatorClockID">
            CreatorClockID
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.ModifiedOn">
            ModifiedOn
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.ModifierClockID">
            ModifierClockID
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ContentType.ActivityPage">
            ActivityPage
        </member>
        <member name="T:EKS.ProcessMaps.Entities.ControllingProgram">
            <summary>
            ControllingProgram
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.Id">
            ControllingProgramId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.Description">
            Description
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.GroupName">
            GroupName
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ControllingProgram.AssetControllingPrograms">
            ActivityPage
        </member>
        <member name="T:EKS.ProcessMaps.Entities.Discipline">
            <summary>
            RefDiscipline
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.Discipline1">
            Discipline1
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.Discipline2">
            Discipline2
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.Discipline3">
            Discipline3
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.Discipline4">
            Discipline4
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.ActivityPage">
            <summary>
            ActivityPage
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.ProcessMap">
            <summary>
            KnowledgePack
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Discipline.SwimLanes">
            <summary>
            SwimLanes
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Entities.MasterDisciplineCode">
            <summary>
            MasterDisciplineCode
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.MasterDisciplineCode.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Entities.MasterDisciplineCode.Code">
            Code
        </member>
        <member name="P:EKS.ProcessMaps.Entities.MasterDisciplineCode.Status">
            Status
        </member>
        <member name="P:EKS.ProcessMaps.Entities.MasterDisciplineCode.CreatedOn">
            CreatedOn
        </member>
        <member name="P:EKS.ProcessMaps.Entities.MasterDisciplineCode.CreatorClockId">
            CreatorClockId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.MasterDisciplineCode.ModifiedOn">
            ModifiedOn
        </member>
        <member name="P:EKS.ProcessMaps.Entities.MasterDisciplineCode.ModifierClockId">
            ModifierClockId
        </member>
        <member name="T:EKS.ProcessMaps.Entities.MigratedContent">
            <summary>
            MigratedContent.
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Entities.NatureOfChange">
            <summary>
            NatureOfChange
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.NatureOfChangeId">
            NatureOfChangeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.ContentItemId">
            ContentItemId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.NocdateTime">
            NocdateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.Definition">
            Definition
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.NatureOfChange.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="T:EKS.ProcessMaps.Entities.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.PhaseId">
            PhaseId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.Phase1">
            Phase1
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Phase.ContentPhases">
            ContentPhases
        </member>
        <member name="T:EKS.ProcessMaps.Entities.ProcessMap">
            <summary>
            Process Map entity.
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ApprovalRequirementId">
            ApprovalRequirementId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Tpmdate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ExportAuthorityId">
            ExportAuthorityId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ControllingProgramId">
            ControllingProgramId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.PrivateInd">
            PrivateInd
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.SourceFileUrl">
            SourceFileUrl
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ExportPdfurl">
            ExportPdfurl
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ActivityBlocks">
            ActivityBlocks
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ProcessMapMeta">
            ProcessMapMeta
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.SwimLanes">
            SwimLanes
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Phases">
            Phases
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.ControllingProgram">
            ControllingProgram
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Discipline">
            Discipline
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ProcessMap.Gen2ContentId">
            Gen2ContentId
        </member>
        <member name="T:EKS.ProcessMaps.Entities.PublishedContent.KnowledgeAssets">
            <summary>
            Enitity class for knowledge assets.
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Entities.SwimLanes">
            <summary>
            Entity of swimlanes.
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.ProcessMapId">
            ProcessMapId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.SequenceNumber">
            SequenceNumber
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.Color">
            Color
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.BorderColor">
            BorderColor
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.BorderStyle">
            BorderStyle
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.BorderWidth">
            BorderWidth
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.ProtectedInd">
            ProtectedInd
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.RequiredInd">
            RequiredInd
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.Size">
            Size
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.Discipline">
            Discipline
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.ProcessMap">
            ProcessMap
        </member>
        <member name="P:EKS.ProcessMaps.Entities.SwimLanes.ActivityBlocks">
            ActivityBlocks
        </member>
        <member name="T:EKS.ProcessMaps.Entities.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.TagsId">
            TagsId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.ParentTagsId">
            ParentTagsId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Entities.Tags.ContentTags">
            ContentTag
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.ToDoId">
            ToDoId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.ContentTypeId">
            ContentTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.Comments">
            Comments
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.IsDone">
            IsDone
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.Url">
            Url
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.ContentStatus">
            ContentStatus
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.ActionId">
            ActionId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.DueDate">
            DueDate
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.RequestedByUserId">
            RequestedByUserId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.TaskRequestedDate">
            TaskRequestedDate
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.AssignedToUserID">
            AssignedToUserID
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.TaskCompletedDate">
            TaskCompletedDate
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.UserPermission">
            UserPermission
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.AssignedToUserName">
            AssignedToUserName
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.ItemId">
            ItemId
        </member>
        <member name="P:EKS.ProcessMaps.Entities.ToDoTask.Version">
            Version
        </member>
        <member name="T:EKS.ProcessMaps.Models.ActivityBlocksModel">
            <summary>
            Model class of activity blocks
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.SwimLaneId">
            SwimLaneId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.ActivityTypeId">
            ActivityTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.SequenceNumber">
            SequenceNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.Color">
            Color
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.BorderColor">
            BorderColor
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.BorderStyle">
            BorderStyle
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.BorderWidth">
            BorderWidth
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.LocationX">
            LocationX
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.LocationY">
            LocationY
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.AssetContentId">
            AssetContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.ProtectedInd">
            ProtectedInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.RequiredInd">
            RequiredInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.ProcessMapId">
            ProcessMapId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.PhaseId">
            PhaseId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.Length">
            Length
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.Width">
            Width
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.DisciplineText">
            DisciplineText Migration Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.ActivityContainers">
            ActivityPages
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlocksModel.ActivityConnections">
            ActivityConnections
        </member>
        <member name="T:EKS.ProcessMaps.Models.ActivityBlockTypesModel">
            <summary>
            Model class of activity block types
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityBlockTypesModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="T:EKS.ProcessMaps.Models.ActivityConnectionsModel">
            <summary>
            Model class of activity connections
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Models.ActivityContainerModel">
            <summary>
            ActivityContainerModel to use as model for activity container
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ActivityContainerId">
            ActivityContainerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ActivityPageId">
            ActivityPageId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ContentItemId">
            ContentItemId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ContentTypeId">
            ContentTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ContentNo">
            ContentNo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.US_JC">
            US_JC
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.Url">
            Url
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ParentActivityContainerId">
            ParentActivityContainerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.OrderNo">
            OrderNo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.CreatedOn">
            CreatedOn
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.CreatorClockId">
            CreatorClockId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ModifiedOn">
            ModifiedOn
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ModifierClockId">
            ModifierClockId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ActivityPageContentId">
            ActivityPageContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.AssetContentId">
            AssetContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.PurposeComponent">
            PurposeComponent
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.ChildList">
            ChildList
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.Guidance">
            Guidance
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.AssetTypeCode">
            AssetTypeCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityContainerModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="T:EKS.ProcessMaps.Models.ActivityDocumentsModel">
            <summary>
            Model class of activity documents.
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.ActivityBlockId">
            ActivityBlockId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.Uri">
            Uri
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.Type">
            Type
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.Createdon">
            Createdon
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.CreatedbyUserid">
            CreatedbyUserid
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.Modifiedon">
            Modifiedon
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.ModifiedbyUserid">
            ModifiedbyUserid
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.SubProcessMapId">
            SubProcessMapId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.ActivityPageId">
            ActivityPageId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityDocumentsModel.Label">
            Label
        </member>
        <member name="T:EKS.ProcessMaps.Models.ActivityMetaModel">
            <summary>
            Model class of activity meta
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.ActivityBlockId">
            ActivityBlockId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.Key">
            Key
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.Value">
            Value
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityMetaModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="T:EKS.ProcessMaps.Models.ActivityPageAllOutputModel">
            <summary>
            ActivityPageAllOutputModel to use as output model for all activity page.
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.Id">
            CriteriaGroupId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.AssetTypeCode">
            AssetTypeCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.DisciplineName">
            DisciplineName
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageAllOutputModel.Content">
            Content
        </member>
        <member name="T:EKS.ProcessMaps.Models.ActivityPageModel">
            <summary>
            Model class of activity pages
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.Id">
            ActivityPageId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.TPMDate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ActivityPageModel.AssetType">
            AssetStatus
        </member>
        <member name="T:EKS.ProcessMaps.Models.ContentAssetTypeModel">
            <summary>
            RelatedContent
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SubDisciplineId">
            SubDisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SubSubDisciplineId">
            SubSubDisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SubSubSubDisciplineId">
            SubSubSubDisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.AssetTypeCode">
            AssetTypeCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.AssetStatus">
            AssetStatus
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.IntentOfCriteria">
            IntentOfCriteria
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.BasisOfCriteria">
            BasisOfCriteria
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ValidationOfCriteria">
            ValidationOfCriteria
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.RequiredReferences">
            RequiredReferences
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.InformationalReferences">
            InformationalReferences
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ClassifierName">
            ClassifierName
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentStatus">
            ContentStatus
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Tpmdate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentPhase">
            ContentPhase   
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentExportCompliance">
            ContentExportCompliance
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentTag">
            ContentTag   
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.FileBytes">
            File Bytes
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ControllingProgramId">
            ControllingProgramId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ExportAuthorityId">
            ExportAuthorityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.IsContentIdRequired">
            IsContentIdRequired
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.IsNOCRequired">
            IsNOCRequired
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.NOCCreatedDate">
            IsNOCRequired
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.DocumentName">
            DocumentName
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.CoAuthor">
            CoAuthor
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ApprovalRequirementsId">
            ApprovalRequirementsId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.AssetHandle">
            AssetHandle
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.BAER">
            BAER
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Class">
            Class
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ClassifiactionDate">
            ClassifiactionDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.DocumentType">
            DocumentType
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.EngineeringOrg">
            EngineeringOrg
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.CreatorClockId">
            CreatorClockId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Discipline">
            Discipline
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Keyword">
            Keyword
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Phase">
            Phase
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentTags">
            ContentTags
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Tags">
            Tags
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ExportComplienceTouchPointData">
            ExportComplienceTouchPointData
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.AuthorId">
            AuthorId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.EngineFamily">
            EngineFamily
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ESWReferenceID">
            ESWReferenceID
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.JC">
            JC
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.PWCreatedBy">
            PWCreatedBy
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SourceDocUrl">
            SourceDocUrl
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.PWStatus">
            PWStatus
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SourceDocID">
            SourceDocID
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentTypeId">
            ContentTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.CreatedOn">
            CreatedOn
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ECTouchPointComments">
            ECTouchPointComments
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.EffectiveFromDate">
            EffectiveFromDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.EffectiveToDate">
            EffectiveToDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ExportAuthority">
            ExportAuthority
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.FirstPublicationDate">
            FirstPublicationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Scope">
            Scope
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SetofAuthors">
            SetofAuthors
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SetofClassifiers">
            SetofClassifiers
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SetofSecurityAttributes">
            SetofSecurityAttributes
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.SourceAssetHandle">
            SourceAssetHandle
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Status">
            ToDo: Add Status
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Type">
            ToDo: Add Type
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.USClassification">
            USClassification
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.UserEmail">
            UserEmail
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.USJuridiction">
            USJuridiction
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.VersionNumber">
            VersionNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentReviewer">
            ContentReviewer
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.NOC">
            ContentReviewer
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ContentOwnerMail">
            ContentOwnerMail
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ConfidentialityName">
            ConfidentialityName
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.WIGuidence">
            WIGuidence
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.ExternalLinks">
            ExternalLinks
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.CriteriaGuidence">
            CriteriaGuidence
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.PrivateInd">
            PrivateInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentAssetTypeModel.Steps">
            ActivityBlocks
        </member>
        <member name="T:EKS.ProcessMaps.Models.ContentOutputModel">
            <summary>
            ContentOutputModel
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentOutputModel.ContentOwner">
            ContentOwner
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentOutputModel.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentOutputModel.CoAuthor">
            CoAuthor
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentOutputModel.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentOutputModel.ExportAuthorityId">
            ExportAuthorityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentOutputModel.OutSourcable">
            OutSourcable
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentOutputModel.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentOutputModel.ControllingProgramGroup">
            ControllingProgramGroup
        </member>
        <member name="T:EKS.ProcessMaps.Models.ContentTypeModel">
            <summary>
            ContentTypeModel is used as model for ContentType
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentTypeModel.ContentTypeId">
            ContentTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentTypeModel.Name">
            Name
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentTypeModel.Code">
            Code
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentTypeModel.Status">
            Status
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentTypeModel.CreatedOn">
            CreatedOn
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentTypeModel.CreatorClockID">
            CreatorClockID
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentTypeModel.ModifiedOn">
            ModifiedOn
        </member>
        <member name="P:EKS.ProcessMaps.Models.ContentTypeModel.ModifierClockID">
            ModifierClockID
        </member>
        <member name="T:EKS.ProcessMaps.Models.MasterDisciplineCodeModel">
            <summary>
            MasterDisciplineCodeModel
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.MasterDisciplineCodeModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.MasterDisciplineCodeModel.Code">
            Code
        </member>
        <member name="P:EKS.ProcessMaps.Models.MasterDisciplineCodeModel.Status">
            Status
        </member>
        <member name="P:EKS.ProcessMaps.Models.MasterDisciplineCodeModel.CreatedOn">
            CreatedOn
        </member>
        <member name="P:EKS.ProcessMaps.Models.MasterDisciplineCodeModel.CreatorClockId">
            CreatorClockId
        </member>
        <member name="P:EKS.ProcessMaps.Models.MasterDisciplineCodeModel.ModifiedOn">
            ModifiedOn
        </member>
        <member name="P:EKS.ProcessMaps.Models.MasterDisciplineCodeModel.ModifierClockId">
            ModifierClockId
        </member>
        <member name="T:EKS.ProcessMaps.Models.PhasesModel">
            <summary>
            Model class of phases
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Models.ProcessMapExistingModel">
            <summary>
            Model class of existing process map
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ApprovalRequirementId">
            ApprovalRequirementId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Tpmdate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ExportAuthorityId">
            ExportAuthorityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ControllingProgramId">
            ControllingProgramId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.PrivateInd">
            PrivateInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.SourceFileUrl">
            SourceFileUrl
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ExportPdfurl">
            ExportPdfurl
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.SwimLanes">
            SwimLanes
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.Phases">
            Phases
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ContentPhases">
            ContentPhases
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ContentExportCompliances">
            ContentExportCompliances
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapExistingModel.ContentTags">
            ContentTags
        </member>
        <member name="T:EKS.ProcessMaps.Models.ProcessMapInputOutputModel">
            <summary>
            Model class for process map input output
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.StepFlowId">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ApprovalRequirementId">
            ApprovalRequirementId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.Tpmdate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ExportAuthorityId">
            ExportAuthorityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ControllingProgramId">
            ControllingProgramId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.PrivateInd">
            PrivateInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.SourceFileUrl">
            SourceFileUrl
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ExportPdfurl">
            ExportPdfurl
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.SwimLanes">
            SwimLanes
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ContentPhase">
            ContentPhase
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ContentExportCompliances">
            ContentExportCompliances
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapInputOutputModel.ContentTag">
            ContentTag
        </member>
        <member name="T:EKS.ProcessMaps.Models.ProcessMapMetaModel">
            <summary>
            Model class of process map meta
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.ProcessMapId">
            ProcessMapId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.Key">
            Key
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.Value">
            Value
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.Createdon">
            Createdon
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.CreatedbyUserid">
            CreatedbyUserid
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.Modifiedon">
            Modifiedon
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapMetaModel.ModifiedbyUserid">
            ModifiedbyUserid
        </member>
        <member name="T:EKS.ProcessMaps.Models.ProcessMapsFlowViewModel">
            <summary>
            ProcessMapsFlowViewModel
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Models.ProcessMapModel">
            <summary>
            Model class of process map
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.AssetStatus">
            AssetStatus
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ApprovalRequirementId">
            ApprovalRequirementId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Tpmdate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ExportAuthorityId">
            ExportAuthorityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ControllingProgramId">
            ControllingProgramId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.PrivateInd">
            PrivateInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.SourceFileUrl">
            SourceFileUrl
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ExportPdfurl">
            ExportPdfurl
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.SwimLanes">
            SwimLanes
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ActivityBlocks">
            ActivityBlocks
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.Phases">
            Phases
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ContentPhase">
            ContentPhase
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ContentExportCompliances">
            ContentExportCompliances
        </member>
        <member name="P:EKS.ProcessMaps.Models.ProcessMapModel.ContentTag">
            ContentTag
        </member>
        <member name="T:EKS.ProcessMaps.Models.ProcessMapsPurposeModel">
            <summary>
            Model class of process map
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Models.ProcessMapsReviseModel">
            <summary>
            Model class of process map
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Models.ProcessMapsSaveAsModel">
            <summary>
            Model class of process map
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Models.PublicStepsInputOutputModel">
            <summary>
            Model class for public steps input output
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ApprovalRequirementId">
            ApprovalRequirementId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Tpmdate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ExportAuthorityId">
            ExportAuthorityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ControllingProgramId">
            ControllingProgramId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.PrivateInd">
            PrivateInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.SourceFileUrl">
            SourceFileUrl
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ExportPdfurl">
            ExportPdfurl
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.SwimLanes">
            SwimLanes
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ContentPhase">
            ContentPhase
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsInputOutputModel.ContentTag">
            ContentTag
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsPurposeModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsPurposeModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublicStepsPurposeModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ContentNumber">
            ContentNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.PrivateInd">
            PrivateInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.AssetTypeCode">
            AssetTypeCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ProgramControlledInd">
            ProgramControlledInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.OutsourcableInd">
            OutsourcableInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.Tpmdate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ApprovalRequirementId">
            ApprovalRequirementId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ExportPdfurl">
            ExportPdfurl
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.Usclassification">
            Usclassification
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.SourceFileUrl">
            SourceFileUrl
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.PresentationUrl">
            PresentationUrl
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.SwimLanes">
            SwimLanes
        </member>
        <member name="P:EKS.ProcessMaps.Models.PublishedContent.KnowledgeAssetModel.ActivityBlocks">
            ActivityBlocks
        </member>
        <member name="T:EKS.ProcessMaps.Models.RevisionCheckingResult">
            <summary>
            RevisionCheckingResult
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Models.StepFlowModel">
            <summary>
            Model class for process map input output
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.StepFlowId">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.Title">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.DisciplineCodeId">
            DisciplineCodeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.AssetTypeId">
            AssetTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.AssetStatusId">
            AssetStatusId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.AssetStatus">
            AssetStatus
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ApprovalRequirementId">
            ApprovalRequirementId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ClassifierId">
            ClassifierId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ConfidentialityId">
            ConfidentialityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.RevisionTypeId">
            RevisionTypeId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ProgramControlled">
            ProgramControlled
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.Outsourceable">
            Outsourceable
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.UsjurisdictionId">
            UsjurisdictionId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.UsclassificationId">
            UsclassificationId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ClassificationRequestNumber">
            ClassificationRequestNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ClassificationDate">
            ClassificationDate
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.Tpmdate">
            Tpmdate
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ExportAuthorityId">
            ExportAuthorityId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ControllingProgramId">
            ControllingProgramId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ContentOwnerId">
            ContentOwnerId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.Keywords">
            Keywords
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.Author">
            Author
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.Confidentiality">
            Confidentiality
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.Purpose">
            Purpose
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ProcessInstId">
            ProcessInstId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.CustomId">
            CustomId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.DisciplineCode">
            DisciplineCode
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.PrivateInd">
            PrivateInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.SourceFileUrl">
            SourceFileUrl
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ExportPdfurl">
            ExportPdfurl
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.SFSwimLanes">
            SwimLanes
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ContentPhase">
            ContentPhase
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ContentExportCompliances">
            ContentExportCompliances
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.ContentTag">
            ContentTag
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepFlowModel.SFActivityConnection">
            SFActivityConnection
        </member>
        <member name="T:EKS.ProcessMaps.Models.SFSwimLanesModel">
            <summary>
            Model class of StepFlow swimlines
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.SwimLaneId">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.StepFlowId">
            StepFlowId
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.SwimLaneTitle">
            StepFlowId
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.Color">
            Color
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.BorderColor">
            BorderColor
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.BorderStyle">
            BorderStyle
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.BorderWidth">
            BorderWidth
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.Steps">
            Steps
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.ProtectedInd">
            ProtectedInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.RequiredInd">
            RequiredInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.SFSwimLanesModel.Size">
            Size
        </member>
        <member name="T:EKS.ProcessMaps.Models.StepModel">
            <summary>
            Model class for Steps
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.StepId">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.StepContentId">
            ContentId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.StepTitle">
            Title
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.BaseType">
            BaseType
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.StepActivityBlockId">
            StepActivityBlockId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.StepSwimLanes">
            SwimLanes
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.ContentPhase">
            ContentPhase
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.ContentExportCompliances">
            ContentExportCompliances
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.ContentTag">
            ContentTag
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepModel.ActivityConnections">
            ActivityConnections
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.SwimLaneId">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.StepId">
            StepFlowId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.SwimLaneTitle">
            StepFlowId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.BaseType">
            BaseType
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.Color">
            Color
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.BorderColor">
            BorderColor
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.BorderStyle">
            BorderStyle
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.BorderWidth">
            BorderWidth
        </member>
        <member name="P:EKS.ProcessMaps.Models.StepSwimlane.ActivityBlocks">
            ActivityBlocks
        </member>
        <member name="T:EKS.ProcessMaps.Models.SwimLanesInputOutputModel">
            <summary>
            Model class of swimlines which use for existing process map.
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.ProcessMapId">
            ProcessMapId
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.SequenceNumber">
            SequenceNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.Color">
            Color
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.BackgroundColor">
            BackgroundColor
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.BorderColor">
            BorderColor
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.BorderStyle">
            BorderStyle
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.BorderWidth">
            BorderWidth
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.ProtectedInd">
            ProtectedInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.RequiredInd">
            RequiredInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.Size">
            Size
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesInputOutputModel.ActivityBlocks">
            ActivityBlocks
        </member>
        <member name="T:EKS.ProcessMaps.Models.SwimLanesModel">
            <summary>
            Model class of swimlines
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.ProcessMapId">
            ProcessMapId
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.SequenceNumber">
            SequenceNumber
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.Color">
            Color
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.BorderColor">
            BorderColor
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.BorderStyle">
            BorderStyle
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.BorderWidth">
            BorderWidth
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.Version">
            Version
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.EffectiveFrom">
            EffectiveFrom
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.EffectiveTo">
            EffectiveTo
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.CreatedDateTime">
            CreatedDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.CreatedUser">
            CreatedUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.LastUpdateDateTime">
            LastUpdateDateTime
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.LastUpdateUser">
            LastUpdateUser
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.DisciplineId">
            DisciplineId
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.DisciplineText">
            DisciplineText
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.ProtectedInd">
            ProtectedInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.RequiredInd">
            RequiredInd
        </member>
        <member name="P:EKS.ProcessMaps.Models.SwimLanesModel.Size">
            Size
        </member>
        <member name="T:EKS.ProcessMaps.Models.UserPreferencesModel">
            <summary>
            Model class of user preferences
            </summary>
        </member>
        <member name="P:EKS.ProcessMaps.Models.UserPreferencesModel.Id">
            Id
        </member>
        <member name="P:EKS.ProcessMaps.Models.UserPreferencesModel.UserIdentifier">
            UserIdentifier
        </member>
        <member name="P:EKS.ProcessMaps.Models.UserPreferencesModel.Tiles">
            Tiles
        </member>
        <member name="T:EKS.ProcessMaps.Filters.CustomAuthorization">
            <summary>
            CustomAuthorization
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Filters.CustomAuthorization.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:EKS.ProcessMaps.Filters.CustomAuthorization1">
            <summary>
            CustomAuthorization
            </summary>
        </member>
        <member name="M:EKS.ProcessMaps.Filters.CustomAuthorization1.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:EKS.ProcessMaps.Helper.Enum.AssetStatuses">
            <summary>
            AssetStatuses
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Helper.Enum.RelatedPeople">
            <summary>
            RelatedPeople
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Helper.Enum.AssetPartTypeCode">
            <summary>
            AssetPartTypeCode
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Helper.Enum.AssetTypes">
            <summary>
            AssetType
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Helper.Enum.PublishedAssetStatus">
            <summary>
            PublishedAssetStatuses
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Helper.Enum.FileNames">
            <summary>
            FileNames
            </summary>
        </member>
        <member name="T:EKS.ProcessMaps.Helper.Enum.PWEmployments">
            <summary>
            PWEmployments
            </summary>
        </member>
    </members>
</doc>
